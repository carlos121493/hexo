<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[飘水寰界]]></title>
  <subtitle><![CDATA[水御双氛的blog]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://www.soledad.com.cn/"/>
  <updated>2017-02-02T17:18:40.670Z</updated>
  <id>http://www.soledad.com.cn/</id>
  
  <author>
    <name><![CDATA[Carlos guo]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[2017-02-02]]></title>
    <link href="http://www.soledad.com.cn/2017/02/02/2017-02-02/"/>
    <id>http://www.soledad.com.cn/2017/02/02/2017-02-02/</id>
    <published>2017-02-02T17:18:24.000Z</published>
    <updated>2017-02-02T17:18:40.670Z</updated>
    <content type="html"><![CDATA[<p>2月2日</p>
<p>今天折腾了一天到沙湾吃了个大盘鸡。基本上坐了一天车回来。<br>确实有点浪费时间，晚上研究了一下锤子手机一下又折腾好晚，深感做学问一定要有耐心。</p>
<p>大盘鸡确实好吃，同时又点了那仁和大盘牛排，感觉份量稍微少了点。但是路上的收获还是挺多的。<br>最主要是听了路上姑父放的音频是袁腾飞讲解的百战。非常有意思。</p>
<p>同时获得了姑父的喜马拉雅账号可以听很多免费的内容了。又得到小姑推荐的开言英语，这些资源有的消化了。<br>百战之谋里很多杰出的将领有些年纪很大有些很小。功成名就的同时并不是一路跟着提拔上来的。<br>而是经历了一些特殊的战役而取得深渊的影响。得到小姑父指点，机会是于风险并存的。</p>
<p>所以面临更大挑战的时候就应该自己想一想，如果能够挑战成功则收获也会非常大。需要积极的思考。<br>同时能承受更多的人才会变得更伟大。</p>
<p>尝试了更新的方法，发现一天当中会有很多想法冒出来，需要随时记录，晚上好总结。<br>同时今天又堕落了不少，很感慨，真正阻碍自己的莫过于自己。然而又时候确实需要好好静静感受下自由的气息。<br>回来后没有人安排的时光感觉精神饱满，过的心情非常顺畅。</p>
<p>看了几篇文章。<br>1.7-11的传记继续在看：7-11发展到合作研发新产品的阶段。虽然产品的形式比较多变。但是核心的价值理念是不变的。<br>也就是为方便用户。所以在研发的种类上以及研发的合作上都以这两个点为原则。只有真正的让消费者接受了，才能互相越来越好。<br>为了达到消费者接受的状态不能够有其妥协，要想办法达到效果为止。所有应对市场消费者的变化要基于持久性的价值作为行动的指向。<br>在价值原则基础上不断审视产品体验，质量，数值效果及合作构成变化。</p>
<p>2.风雨哈佛路：看了珍妮。伊丽莎白。默里的一路读到哈佛的自传，其出生在父母吸毒领取救济金的家庭。家庭环境不是很好，从小其父亲有很多创造力和组织能力。<br>默里有一种上劲的好奇心，并且一直以父母为中心的想讨好。还好虽然默里的父母有在家暴的环境下生长。但是默里却在比较堕落但是没有家暴的环境里成长还是很不错的。</p>
<p>晚上又研究了下锤子手机用起来真的体验很好。one step可以多个图片调整，内置的垃圾处理很方便。快捷短语，云服务，短信常用信息表示复制非常贴心，big bang也非常给力。<br>滚动截屏，这些体验不仅感觉非常赞，而且是其他手机所没有的。并且锤子开源了其代码，风格值得敬佩。</p>
<p>正事这些科技之光，人才光芒闪耀着影响着我们的生活。不但要学习，更要结合自己和未来归纳到方便调用的框架中为自己所用。相信等机会到来时自己也能在历史的潮流中能够有所发光发热！</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>2月2日</p>
<p>今天折腾了一天到沙湾吃了个大盘鸡。基本上坐了一天车回来。<br>确实有点浪费时间，晚上研究了一下锤子手机一下又折腾好晚，深感做学问一定要有耐心。</p>
<p>大盘鸡确实好吃，同时又点了那仁和大盘牛排，感觉份量稍微少了点。但是路上的收获还是挺多的。<]]>
    </summary>
    
      <category term="日记" scheme="http://www.soledad.com.cn/tags/%E6%97%A5%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[2017-02-01]]></title>
    <link href="http://www.soledad.com.cn/2017/02/01/2017-02-01/"/>
    <id>http://www.soledad.com.cn/2017/02/01/2017-02-01/</id>
    <published>2017-02-01T15:01:04.000Z</published>
    <updated>2017-02-01T15:01:31.290Z</updated>
    <content type="html"><![CDATA[<p>今天生活的非常充实，一大早做完大保健，又沿着雪路到了额敏。回来又吃了新鲜的烤鱼。<br>今天看了精进里的学习一章，感觉至今为止的学习大部分都是在白费功夫。</p>
<p>学习没有效果有很多原因。一直在吸纳规整，却少了应用环节，知识带入到应用比较慢。<br>有了反思和归纳后，比至今从头学到尾是有些效果。然而理论层面上带入到现实中还是有很大一段距离。</p>
<p>学习的知识体系融汇贯通尚且不易，将学习体系遇到相应的问题情节能够快速的检索出来。<br>不仅需要完整体系，同时需要不断锻炼实践和思考。</p>
<p>所以以后</p>
<ul>
<li>1.尝试对过去知识进行整合，以实际问题为思考核心来将知识体系重新整理出来。</li>
<li>2.再不断对知识体系进行扩充迁移将之完善。</li>
<li>3.对知识体系运用进行纠错。对其用法，意义，细节框架重新审视。是否符合自己的未来规划。</li>
</ul>
<p>在路上遇到一些臭水沟，还有铁厂沟。<br>污染问题令我汗颜。本来是煤炭为资源的铁厂沟也落得没有效益的空城。<br>同时看到7-11的创始人是如何力排众议一点点的进展。<br>让我深深感到一旦开始就没发回头，一旦开始就需要坚持，重要的是要认清开始的是不是一个可持续发展的利他的事情。</p>
<p>今天感觉还是略有些疲惫，慢慢感受和总结，将学习的结构一点点完善起来去结合实际运用。<br>以后会越来越好的。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>今天生活的非常充实，一大早做完大保健，又沿着雪路到了额敏。回来又吃了新鲜的烤鱼。<br>今天看了精进里的学习一章，感觉至今为止的学习大部分都是在白费功夫。</p>
<p>学习没有效果有很多原因。一直在吸纳规整，却少了应用环节，知识带入到应用比较慢。<br>有了反思和归纳后，]]>
    </summary>
    
      <category term="日记" scheme="http://www.soledad.com.cn/tags/%E6%97%A5%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[2017-01-31]]></title>
    <link href="http://www.soledad.com.cn/2017/01/31/2017-01-31/"/>
    <id>http://www.soledad.com.cn/2017/01/31/2017-01-31/</id>
    <published>2017-01-31T16:32:46.000Z</published>
    <updated>2017-01-31T16:33:33.755Z</updated>
    <content type="html"><![CDATA[<p>1月31日</p>
<p>时间荏苒。<br>发现做事的时候阻碍真的是非常多。不是时间不够。而是很少能有大段时间完成一个产品流程。总是遇到需要核心切换的地方。<br>这是我今天的感受。原因也是我今天看到的精进的两个观点。</p>
<p>1.做事的方法，同精益创业一样，精进这本书告诉我需要完成假设－测试－认知的过程。<br>当假设后一定要尽快去做，用最小的代价去实践。尽量现在就去执行，减少琐碎事情增加的任务负担。</p>
<p>2.认知。认知是更为重要的环节，意味着通告结果数据沟通来进一步调整个人产品到达理想的愿景状态。<br>在这里作者对认知有了更为深度的阐释。要从不同维度来思考认知。</p>
<p>很厉害的人，懂得精进的人都是有前瞻性思维和总结性思维的人。<br>大体维度可以分为如下几个方面</p>
<ul>
<li>假设 查看结果和预期之间的差异</li>
<li>结果 查看结果和最终目标的差异</li>
<li>工具 查看工具是否有效是否阻碍</li>
<li>优势 是否在过程中有可以继续发扬的优势</li>
<li>遗憾 是否有遗憾</li>
<li>其他 是否有其他阻碍问题。</li>
</ul>
<p>通过这种缜密的思维模式，我思考了最近半年来做的一些好与不好的事情。<br>重要的应该算是做的H5开发工具瓢虫莫属了，是一款能够以浏览器体验方式来调试H5界面类似微信小程序这样。<br>在这个过程中真的是遇到各种阻碍</p>
<ul>
<li><p>第一个阶段：<br>是了解到大体的规划自己用额外时间，加上效率高些，差不多每周有5天开发时间全身心投入到开发途中。<br>组里的同事也非常兴趣高昂，吵嚷着要加入，对于一个新的技术，自己还在摸索，要以怎样的架构来让他们加入？<br>老大又提出来要尽量支持自己的开发，对于自己组里所需jsapi并不熟悉，自己在项目中没有涉及到大部分api。<br>这样必须对界面和内容的架构进行分层。第一期要做的内容也勉强制定，边制定边做架构设计。<br>第一期内容也不多大概架构完，差不多功能都实现了。<br>一周的时间完成了架构的设计。有了简单的页面切换功能，并能够添加其他效果。看上去可以交给他们去开发了。<br>他们兴趣很高昂，但是也有很多其他业务代码在开发，都想着能搞一个牛逼的效果直指体验技术部。<br>所以最后代码写的非常糟糕，跟他们解释的时间都不如自己开发完成了。最后开发了一部分也撂着不进行测试和文档的书写了。<br>其实开发的量是非常小的，不过没有他们的加入也确实少发现一些问题。<br>中间还有各种假期和业务都导致不能很顺利的进行，最后还是在一个月的时间里，将其开发成一款稍微能用的产品。</p>
</li>
<li><p>接着就到了去日本旅行的时光，正好微信小程序的盛况空前。管理层意识到需要做一个支付宝小程序IDE，<br>正好有瓢虫已经开发了一部分，旅游途中和支付宝同事交流后决定共建这个工具。<br>面对比较辛苦的双12项目，只能支持几周将瓢虫的核心代码重新构建支持瓢虫IDE和小程序IDE。</p>
</li>
<li><p>等回来后经常业务补位，很难开发，一个月硬是将钉钉的api兼容到一起。完成一个稍微细节完整的产品。<br>然而到了杭州去推广的时候发现很多功能不到位。开发非常不愿意捧场试用。简直是个失败的产品。</p>
</li>
<li><p>又是一个月，思考了瓢虫的未来和发展。觉得还是服务商才比较需要这种开发模式，而且服务商比较需要登录功能。<br>大部分功能也不需要瓢虫来完成。将功能进行区隔为服务商打造完美体验。</p>
</li>
<li><p>将服务商的功能推广出去，并制作网站。快过年了也有点没心思。想想其实好好进展，1～2个月就能推出像样的产品然而我花了居然如此之多的时间。</p>
</li>
</ul>
<p>很大一部分的阻碍来自于认知。对于api的不了解。对于开放战略的不了解。在模糊的定位下开始进行，没有做一个能发出版本的产品。<br>开始探索的时候，遇到非常多的业务和假期，难以持续。<br>开发出的东西植入了其他项目但是自身项目没有人去做。植入了其他项目，没有小伙伴愿意一起维护下去。<br>不断的来回认知切换非常消耗我的感情，到后来有些不愿意看代码。很多时候写到一半就做别的项目，后头要补完另一边代码思路已经衔接不上了。<br>中途又维护很多组件库，其他创新项目。结婚事宜都不得不做出让步。<br>但是也是有了整体的体验，领导觉得再走一步就能完成的感觉就不断让步，也要求进行下去。</p>
<p>总结下来。<br>做的过程中有几点认识不清的情况。</p>
<ul>
<li>1.对他人了解的不够。对制作此工具的原因不是很了解，没有第一时间听到用户的声音而是领导规划完成绩效的产物。做的过程中，大家投入不够，都想着学点技术，想着自我提升，攀附绩效的想法，最后导致培训成本也非常高。结果最后真正帮上忙的并不多。</li>
<li>2.工具使用的不熟，很多困难，stackoverflow github issue google都有。有的时候找了半天文档，觉得文档里或者某个平台里没有就放弃，当然也有时间不够的情况。还好和小程序一起闭关进展时获得不少方便查询资料和结果都不错。</li>
<li>3.优势上，一股作气初期进展很大。后期加上业务充斥有点疲软。</li>
<li>4.还好最后离绩效评定还是有段日子的。而且希望能通过此有一次完整的产品设计和体验的方式，这个目的还是达到了。</li>
</ul>
<p>所以今后</p>
<ul>
<li>1.对项目的制作原因需要有比较明确的认识，并且能第一时间获取到种子选手的意愿和使用情况，能够边写边使用。</li>
<li>2.对项目的开发尽量找踏实内行并且有老大帮助指派情况帮助，要能够写测试写文档。而非联络员销售员这样的角色。</li>
<li>3.对项目的重视程度还有待提高。没有项目的协助资源也就算了，对于重点项目没有开辟单独的时间依然要去做其他项目非常消耗。</li>
<li>4.要能保证项目进度，并且时刻用上工具帮助项目进展。</li>
</ul>
<p>同样<br>健身的情况主要是自身习惯的阻碍问题。<br>书籍需要进一步整理和总结。这些都是需要在后续加强的部分。在这段时间里好好将这些垃圾烂尾项目处理掉，相信明年会渐渐好起来。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>1月31日</p>
<p>时间荏苒。<br>发现做事的时候阻碍真的是非常多。不是时间不够。而是很少能有大段时间完成一个产品流程。总是遇到需要核心切换的地方。<br>这是我今天的感受。原因也是我今天看到的精进的两个观点。</p>
<p>1.做事的方法，同精益创业一样，精进这本]]>
    </summary>
    
      <category term="日记" scheme="http://www.soledad.com.cn/tags/%E6%97%A5%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[2017-1-30]]></title>
    <link href="http://www.soledad.com.cn/2017/01/30/2017-1-30/"/>
    <id>http://www.soledad.com.cn/2017/01/30/2017-1-30/</id>
    <published>2017-01-30T13:09:14.000Z</published>
    <updated>2017-01-31T16:37:07.985Z</updated>
    <content type="html"><![CDATA[<p>不禁感慨，本来计划的事情，随着时间的流逝。一切计划变得如雾霾般的模糊。<br>生活中有各种各样的诱惑。</p>
<p>如何能够远离诱惑，一个好的方案是不够的。方案是可以制定出来，当然也可以完美的抛弃。<br>习惯比方案来的更明晰。一个好的习惯养成遇到春节这种日子也要有中断和抛弃的可能。</p>
<p>总结下来。这段时光，自己也在生活中变得扭曲起来。毕竟在家里所以不得不那么自由。<br>不静下来想一想，自己就会背离自己越远。</p>
<p>可持续发展之道是需要完善的战略。利他思想是核心的观念。<br>利他之中，不断对他人了解，不断占用自己的时光，不断发现新的机会，无法坚持，做不成什么事情的。</p>
<p>所以，事情要一件件完成，并发太多，一切计划犹如过眼云烟。<br>不仅要单一还要静下来想一想。完成的状态跟踪。认定坚持不断认知检验。</p>
<hr>
<p>今天学习了时间管理，每个人思考时间的维度不一样。对于未来和过去的事情的计划也不尽相同。<br>对于五年内的规划结合过去的习惯和未来的发展将能够更好的发挥出自己的能力。<br>不断今天挑战自己。做一些半衰期较长的事情。</p>
<p>今天看了7-eleven的发展史，在我看来是最成功的发展史。<br>主人公，经历了自己的人生知识积累，并认定对的模式。用自己的精益创业方法，设置卓越的唯一指标。<br>不断变化应对顾客的便利，不对此进行任何妥协。<br>同时完成了</p>
<ul>
<li>区域交流会议，直接进行交流，发现问题。</li>
<li>统一配送收获，将供应商进行温度划分。</li>
<li>进行产品研发，研发产品最适合的方式。</li>
<li>进行金融改革将atm带入7-11<br>不仅是之前知识的总结案例，同时告诉我们如何有效的做有价值的内容。</li>
</ul>
<p>今天在二姑的邀请下完成了一次大保健，做艾灸。<br>用烫热的浸入药水的石头包裹起来在背上揉搓，调理神经。<br>用特殊仪器作为加热肚子上神阙部分。<br>通过药物蒸汽加热双腿。<br>效果不错。价格略高，要100元。</p>
<hr>
]]></content>
    <summary type="html">
    <![CDATA[<p>不禁感慨，本来计划的事情，随着时间的流逝。一切计划变得如雾霾般的模糊。<br>生活中有各种各样的诱惑。</p>
<p>如何能够远离诱惑，一个好的方案是不够的。方案是可以制定出来，当然也可以完美的抛弃。<br>习惯比方案来的更明晰。一个好的习惯养成遇到春节这种日子也要有中断和]]>
    </summary>
    
      <category term="日记" scheme="http://www.soledad.com.cn/tags/%E6%97%A5%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[2017-1-29]]></title>
    <link href="http://www.soledad.com.cn/2017/01/30/2017-1-29/"/>
    <id>http://www.soledad.com.cn/2017/01/30/2017-1-29/</id>
    <published>2017-01-30T13:08:44.000Z</published>
    <updated>2017-01-30T13:09:47.297Z</updated>
    <content type="html"><![CDATA[<p>从回来后我在想，需要是时候记录和坚持一下总结了。每天对自己的想法有一定的预期，并适时的进行总结。<br>想想这是初中刘鲁新老师曾经给我们布置过的简单任务，总结一下每天的新闻联播或者焦点访谈。想想这是非常有意义的行为。<br>然而在快节奏中，慢慢的将自我埋藏在做的途中，少了思考。文明正是在静一静的时候才会浮现出来。<br>想想2016年以及之前都做了非常多没有意义的事情很多在于不能自己反思，不能自己消化，不能自己琢磨。<br>最后被整合社会牵着鼻子走。</p>
<p>今年想起来，有几点收获。<br>1.对于知识体系，有架构的意识，将知识或者代码，在整体的结构上进行架构，后期将功能放入都是轻而易举的事情，变得利于记忆。<br>2.对于方法，知道其能解决什么问题，为什么能解决，解决的思路是，能更好的掌握清楚方法的条件，在使用时琢磨，才有益吸收变为自己的东西。并将其放入架构中。<br>3.对于他人，学会理解，了解到合理性的情况，明白差异的存在，及如何了解他人，如何从话中问话。<br>4.学会使用方法时进行实践反馈，思考。让方法更好的内化。不过还内化的不是很好，仍然需要继续努力。</p>
<p>今年飞机回来感触也比较深。对于他人在生活中的帮助，体会比较少，对他人的反应有太多从自己出发的情况。有时会迷失的希望他人按照自己的思路走。<br>太有目的性，丧失了空性和潜力这是非常糟糕的情况。</p>
<p>对于生活中，情绪偶尔会莫名其妙的出来，想想是自己没有意识到的问题。情绪出来应该先学会察觉到。然后观察情绪的产生动机。<br>了解他人做法的合理。要明白自己的情绪是自己活的不如意的表现，真正活的开心是不会有情绪的，身边脾气不好的人主要是生活不好造成的。<br>我们的目标是要完善生活，将生活变得好起来。学会将情绪内化。</p>
<p>这次回来了解到不断调整自己将力量内化于自己的内心和行动中。将目标和计划以利他的想法为基础，不随便浪费能量。<br>稳定在主要目标上输出。调整自己行为，找到内部及背后的原因，将问题和方法内化到架构上。完成不断对主要目标的调整。<br>外部的情况要善于观察，总结，通过自己不断和外界链接关系。</p>
<p>今后要将总结于整体架构中。并配合图片加以说明，写总结时要以更好的态度和状态来对待。相信这是一笔宝贵的财富。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>从回来后我在想，需要是时候记录和坚持一下总结了。每天对自己的想法有一定的预期，并适时的进行总结。<br>想想这是初中刘鲁新老师曾经给我们布置过的简单任务，总结一下每天的新闻联播或者焦点访谈。想想这是非常有意义的行为。<br>然而在快节奏中，慢慢的将自我埋藏在做的途中，少了思]]>
    </summary>
    
      <category term="日记" scheme="http://www.soledad.com.cn/tags/%E6%97%A5%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[读沃顿商学院谈判有感]]></title>
    <link href="http://www.soledad.com.cn/2017/01/30/%E8%AF%BB%E6%B2%83%E9%A1%BF%E5%95%86%E5%AD%A6%E9%99%A2%E8%B0%88%E5%88%A4%E6%9C%89%E6%84%9F/"/>
    <id>http://www.soledad.com.cn/2017/01/30/读沃顿商学院谈判有感/</id>
    <published>2017-01-30T13:07:40.000Z</published>
    <updated>2017-01-30T13:09:38.277Z</updated>
    <content type="html"><![CDATA[<p>谈判是什么？总是想将谈判视为一种战术，视为一种技术，通过手段压制对手，能以一种方式来赢得最多。<br>相信看书的初衷也是这个，没错。然而看完后，深刻体会到自己的认识是有很多问题的。</p>
<p>生活中时时刻刻充满谈判，沟通即谈判，无论什么时候以语言，肢体，暗示能够使对方产生感知产生影响的都有谈判。<br>谈判不懂战略则被人牵制，牵着鼻子走，最后委屈的是自己。谈判太懂技术，太懂战略费尽心力得到自己想要的真的是自己想要的么？自己希望做成这样的人么？</p>
<p>如何正确全面健康的把握和衡量标准？是我看完后的感想。</p>
<p>如何正确全面健康的把握和衡量标准？可能我们很内向，在很多时候通过这些技术改变自己的做法显得有些变味了。<br>所以，在保证自己性格的情况下我们要改变的只是观念和风格，并不是要改变我们的性格。比如，本来很善良的性格，胆怯的风格，不是用激进的方式对待他人就是不胆怯了，我们要做的是从中找到适合自己的方法，比如虽然胆怯但是用勇敢而非激进的方式指出对彼此都更好的方案，这样变得更有效。</p>
<p>每个人从出生到成长，经历的同时塑造了性格，根植于文化，每个人思想方式观念的不同，导致大家的差异。差异对于陌生的接受都是不一样的，但是完全可以超越自我。<br>就像九型人格说的那样，很多时候超越自我是带着对自身的认识，超越了知觉面纱而得到的飞跃。比如有领导力的人，如果对自己认识不够则变得刚愎自用，则自己的才能发挥受到限制，但是认识到自己的接纳能力不行的时候，就会生出高层德行，也就是无知。我是属于比较享乐主义者，然而我的高层德行在于工作。所以一项技术只有对自己的认知之下才能发挥到极致。</p>
<p>我们再来看如何正确全面健康的把握和衡量标准问题？你对自己认识了，然后就开始使用这个技术，然而我在实践中就发现了自己的另一个误区，比如我比较贪享受，希望大家能给我更多的利益，我就能更好的工作。然后用各种手段来进行强化。看来我只是认识到了自己，但是并不全面健康。自我实现的价值在于将整体利益最大化，更重要是如何帮他人创造更多，并不是帮助自己！如果你能最大化的帮助到别人，为自己争取更多那是轻而易举的事情。</p>
<p>帮助别人除了自己的思想比较自私利己外，更重要的是帮不到点子上就真的帮助不到他人。比如很多时候他人只是希望坐下来聊聊就能帮助他，而却给了建议。很多时候只是希望得到他人的认可，却得到了更多的工作。而授予者却认为自己是在帮他。这样也就不能实实在在帮助到别人。最后出现的矛盾和问题达不到目标也是自然而然的。</p>
<p>所以正确健康的把握和衡量如何获取更多的标准，在我看来是如何更多的自然而然获取健康的财富。</p>
<p>很多手段，真正的让人误解这样的逻辑。比如准则，很多时候书中的例子说明准则非常重要，也确实很有效果，但是书中的很多例子是健康的么？比如，有些时候对方脾气很暴躁，然后就看着对方的服务规则找漏洞，然后告诉他，这样符合规则么？这个很好理解，他会按照我们的想法做，不过这样我们能理解这个技术起作用的原因么？我们能很好的驾驭这种技术么？很有可能变成一种损人利己的过程。我看来准则这种技术是让他人认识到自己这样的情绪会伤害他人，不能达到彼此共同的目标而已。如果本来对方已经示弱或者已经要有不少损失的情况下再用这种情况肯定不好，小则积怨，大则影响自己的原则本性。还比如，建立一个目标，建立一个目标的结果很多时候都首先是先入为主的观念，都是想达到自己的目标，结果就变得不择手段起来。我看来建立目标是不要忘记谈话的目的。不要最后跟别人搞好了关系，但是忘了是要办理是要干什么事了，如果过分强调目标，达不到目标或者达到目标缺乏合理性都是不健康的。真正的目标是基于整体利益的，甚至对方利益，社会利益要大于自身利益的。</p>
<p>基于以上，认为要达到如何正确全面健康的把握谈判衡量标准，1.正确：对自己有比较好的认识，不需要违背本性做强求的事情，一定要敞开心扉，对社会开始接纳起来，不能说本性是不接纳社会，接纳社会是强求的事情了。2.全面：要了解大家的文化差异，观念差异，认识差异，用正确的方式正确的战略来对待他人。了解他人的想法，切合实际的帮助他人，也许别人仅仅希望一个精神安慰，不要太过跑偏。3.健康：以大家的利益为基准，甚至更要以他人的利益为重，设身处地为他人着想，想如何帮助他人，当别人得到满足时，自己获得更多都是自然而然的事情。</p>
<p>所以谈判的各种技术应该基于这一原则展开，不断总结不断思考，才能更好的发挥起来。不管在这个社会上留下什么带走什么，最终不过化为尘芥。在人生道路上的体验过程却是独有的，我们应该基于完成对人生质量幸福的这一大目标，相对于各种物质获得来说，人生更多的是一种体验，各个场景定义小目标的时候切记不要跑偏这一目标。比如游戏我们只是想娱乐休闲，结果最后很多情况却变得情绪暴躁，更没法专注。比如我们受了文化的观念影响，最后跑偏这一目标，这都是不可取的。不忘初心，方得始终。</p>
<p>所以说谈判并不只是一种手段，一种技术，更是一种方法，一种让大家都能过得更好的方法，基于都能过得更好的观念上，很多方法不管在书中或者在书中没讲到的都会自然而然信手拈来。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>谈判是什么？总是想将谈判视为一种战术，视为一种技术，通过手段压制对手，能以一种方式来赢得最多。<br>相信看书的初衷也是这个，没错。然而看完后，深刻体会到自己的认识是有很多问题的。</p>
<p>生活中时时刻刻充满谈判，沟通即谈判，无论什么时候以语言，肢体，暗示能够使对方产]]>
    </summary>
    
      <category term="感想" scheme="http://www.soledad.com.cn/tags/%E6%84%9F%E6%83%B3/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[webstorm,sublime,atom配置eslint及对比]]></title>
    <link href="http://www.soledad.com.cn/2016/04/13/atom%E9%85%8D%E7%BD%AEeslint%E5%8F%8A%E5%AF%B9%E6%AF%94/"/>
    <id>http://www.soledad.com.cn/2016/04/13/atom配置eslint及对比/</id>
    <published>2016-04-13T16:23:17.000Z</published>
    <updated>2016-04-14T11:54:49.683Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>eslint 是js代码检查工具，有很多很方便设置的规则，能够极大支持react，babel，对代码质量有深远的影响<br>如果对eslint项目配置不理解可以移步到这里<a href="http://soledad.com.cn/2016/04/13/eslint%E5%9C%A8%E9%A1%B9%E7%9B%AE%E4%B8%AD%E7%9A%84%E4%BD%BF%E7%94%A8/" target="_blank" rel="external">eslint在项目中的使用</a></p>
</blockquote>
<h3 id="sublime">sublime</h3><p>sublime里面设置eslint是非常方便<br>只需要安装SublimeLinter装好后可在此看到<br><img src="https://os.alipayobjects.com/rmsportal/oYZVLujSyMtmrsn.png" alt="SublimeLinter"><br>然后安装一下 <a href="https://github.com/roadhump/SublimeLinter-eslint" target="_blank" rel="external">SublimeLinter-eslint</a><br>就可以愉快的玩耍了，效果如下，会自动监测项目根目录中的.eslintrc。<br>具体提示在下方，会有简单的报错和报错原因，对于基本的检查比不可少。<br><img src="https://os.alipayobjects.com/rmsportal/VBQzTtXYTYrQawS.png" alt=""></p>
<p>要安装2个，需要输入对应脚步对应版本号，支持sublime3.0<br>可以在配置中设置高亮的样式效果等。</p>
<h4 id="综合评价＊＊＊＊4-0">综合评价＊＊＊＊4.0</h4><hr>
<h3 id="webstorm">webstorm</h3><p>webstorm是自带的。不用做任何组件的安装，但是要配置一下。<br>点击File=&gt;Default Setting 搜索一下eslint<br><img src="https://os.alipayobjects.com/rmsportal/PgNsbdABAaxYoRO.png" alt=""><br>只要点击一下enable方式即可。是不是很方便。</p>
<blockquote>
<p>注意：但有的时候自动搜索并不准确，尤其是其默认用的是全局的eslint来进行甄别，和本地版本不一致。<br>如果出现不准确的情况要自行配置一下</p>
<ul>
<li>检测效果如下，和eslint很像，但是从右边一列的颜色里可以看到有红色的小行来提示，并且可以鼠标hover看错误提示，画面太美。。。</li>
</ul>
</blockquote>
<p><img src="https://os.alipayobjects.com/rmsportal/TeqiNdDZQGALnDW.png" alt=""><br><img src="https://os.alipayobjects.com/rmsportal/pLLPFwnoZKJePfQ.png" alt=""></p>
<p>但是由于webstorm本身要钱，而且超级吃内存，所以。。。</p>
<h4 id="综合评价＊＊＊＊4-5">综合评价＊＊＊＊4.5</h4><hr>
<h3 id="atom">atom</h3><p>atom是近期开发的独起之秀，不但有sublime的优点，完全是github团队开发，拥有强势资源，插件安装也异常方便，强力推荐。<br>但是同事却略有不接受，不知为何还是各区所需吧。<br>安装方式非常简单。<br>下载了atom后自动安装类似npm的包管理工具apm<br>只要在命令行里打出<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apm install linter;</span><br><span class="line">apm install linter-eslint;</span><br></pre></td></tr></table></figure></p>
<p>即可，同时可以通过命令<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apm ls</span><br></pre></td></tr></table></figure></p>
<p>来显示安装了哪些组件。</p>
<p>好了，来看看效果<br><img src="https://os.alipayobjects.com/rmsportal/eZtOVXGQQmZSeqD.png" alt=""><br>不仅可以看到错误，同时光标移动过去还有小弹窗，底部还有行数，点击后直接转过去。<br>同时可以看到一个文件或者整个项目里的问题。<br><img src="https://os.alipayobjects.com/rmsportal/BJQegObVkiJFbjC.png" alt=""><br>我的天噜。。。</p>
<h4 id="完美＊＊＊＊＊五星">完美＊＊＊＊＊五星</h4><p>同时在开发时候，如果不想显示错误，想一次提交的时候再看问题，也完全可以通过command + shift + p调出控制台输入eslint就会有各种命令。<br>选择Toggle即可切换提示错误面板，还有其他一些命令不一一介绍了。<br><img src="https://os.alipayobjects.com/rmsportal/sFAeYkFukNCavUQ.png" alt=""></p>
<p>如果对eslint不是很了解可以看这里<a href="http://soledad.com.cn/2016/04/13/eslint%E5%9C%A8%E9%A1%B9%E7%9B%AE%E4%B8%AD%E7%9A%84%E4%BD%BF%E7%94%A8/" target="_blank" rel="external">eslint在项目中的使用</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>eslint 是js代码检查工具，有很多很方便设置的规则，能够极大支持react，babel，对代码质量有深远的影响<br>如果对eslint项目配置不理解可以移步到这里<a href="http://soledad.com.cn/2016/04/]]>
    </summary>
    
      <category term="webstorm sublime atom eslint tool" scheme="http://www.soledad.com.cn/tags/webstorm-sublime-atom-eslint-tool/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[eslint在项目中的使用]]></title>
    <link href="http://www.soledad.com.cn/2016/04/13/eslint%E5%9C%A8%E9%A1%B9%E7%9B%AE%E4%B8%AD%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>http://www.soledad.com.cn/2016/04/13/eslint在项目中的使用/</id>
    <published>2016-04-13T14:11:15.000Z</published>
    <updated>2016-04-14T11:54:09.450Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>项目的规范和可维护性非常重要。不好的文档难以维护。影响维护的心情，看看下面的例子，能不能好好的玩耍了。</p>
<ul>
<li><a href="https://www.zhihu.com/question/30776912" target="_blank" rel="external">公司项目里面看到过哪些操蛋的代码</a></li>
</ul>
</blockquote>
<p>所以最好就是, 一步到位的完美<br>一鼓作气，再而三，三而竭</p>
<p>以前有jshint，这样的检查工具。打包前进行检查，随着代码量的递增已经完全不满足要求。<br>现在更多的是需要commit就检查一次，输入一下就检查一次。</p>
<hr>
<h3 id="如果需要commit检查一次，">如果需要commit检查一次，</h3><ul>
<li><p>只要下载<a href="https://www.npmjs.com/package/precommit" target="_blank" rel="external">precommit</a>库并在package里面配置</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install precommit</span><br></pre></td></tr></table></figure>
</li>
<li><p>并在package.json文件中，配置precommit和相应的scripts即可。</p>
</li>
<li>比如要在提交前用jshint进行检查，只要在package.json中写入<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"scripts"</span>: &#123;</span><br><span class="line">  <span class="string">"lint"</span>: <span class="string">"jshint"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"pre-commit"</span>: [</span><br><span class="line">   <span class="string">"lint"</span></span><br><span class="line"> ],</span><br></pre></td></tr></table></figure>
<hr>
<h3 id="eslint">eslint</h3><p> 随着时代的发展，对react支持比较好的eslint出场了，<br> eslint有react和babel的插件可以很好的支持react项目的开发。<br> 而现在市面上非常有名的规范<a href="https://www.npmjs.com/package/eslint-config-airbnb" target="_blank" rel="external">eslint-config-airbnb</a>正是基于此</p>
<p> 想用这套规范开发react项目非常方便</p>
<ul>
<li><p>1.只要</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install eslint eslint-babel eslint-plugin-react eslint-config-react</span><br></pre></td></tr></table></figure>
</li>
<li><p>2.然后在package.json里面配置一下相应规则即可</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"scripts"</span>: &#123;</span><br><span class="line">	<span class="string">"lint"</span>: <span class="string">"eslint --ext .js,.jsx"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>3.在根目录下新建.eslintrc</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> &#123;</span><br><span class="line">  <span class="string">"extends"</span>: <span class="string">"eslint-config-airbnb"</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>大功告成，<br>当我们执行<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">    npm run lint </span><br><span class="line"><span class="string">``</span><span class="string">` </span><br><span class="line">或者 </span><br><span class="line">`</span><span class="string">``</span>javascript</span><br><span class="line">    git comit xxx</span><br></pre></td></tr></table></figure></p>
<p>看看效果<br>出错信息里会包含哪个文件哪一行什么原因出错。<br><img src="https://os.alipayobjects.com/rmsportal/pwMKnVPgewojvph.png" alt=""><br>详细的规则可以阅读<br><a href="https://github.com/sivan/javascript-style-guide/blob/master/es5/README.md" target="_blank" rel="external">airbnb-config</a></p>
<hr>
<h3 id="规则的扩展">规则的扩展</h3><p>具体的规则包含bable-eslint 和 eslint-plugin-react两部分<br>以下是一些规则的说明可以在.eslintrc中进行覆盖,当然这些规则完全可以看eslint-config-airbnb的源码对其进行覆盖</p>
<p><a href="http://eslint.org/docs/rules/" target="_blank" rel="external">eslint</a><br><a href="https://github.com/yannickcr/eslint-plugin-react" target="_blank" rel="external">eslint-react</a><br>比如我现在不希望整个文件里面出现alert，可以这样在.eslintrc中配置<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">	<span class="string">"rules"</span>: &#123;</span><br><span class="line">	  <span class="string">"no-alert"</span>: <span class="number">0</span>,</span><br><span class="line">	 &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></p>
<p> 这个已经在eslint-config-airbnb中已经有说明<br> 所以如果想在继承airbnb规则后对对其进行覆盖可以这样做<br> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">	<span class="string">"extends"</span>: <span class="string">"eslint-config-airbnb"</span>,</span><br><span class="line">	<span class="string">"rules"</span>: &#123;</span><br><span class="line">	  <span class="string">"no-alert"</span>: <span class="number">0</span>,</span><br><span class="line">	 &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></p>
<hr>
<p>最后如果想了解如何使用ide支持eslint，能够一边书写一边查错，可移步到这里<a href="http://soledad.com.cn/2016/04/13/atom%E9%85%8D%E7%BD%AEeslint%E5%8F%8A%E5%AF%B9%E6%AF%94/" target="_blank" rel="external">webstorm,sublime,atom配置eslint及对比</a>。</p>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>项目的规范和可维护性非常重要。不好的文档难以维护。影响维护的心情，看看下面的例子，能不能好好的玩耍了。</p>
<ul>
<li><a href="https://www.zhihu.com/question/30776912" target="_]]>
    </summary>
    
      <category term="eslint react babel" scheme="http://www.soledad.com.cn/tags/eslint-react-babel/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[dora项目搭建及配置]]></title>
    <link href="http://www.soledad.com.cn/2016/01/08/dora%E9%A1%B9%E7%9B%AE%E6%90%AD%E5%BB%BA%E5%8F%8A%E9%85%8D%E7%BD%AE/"/>
    <id>http://www.soledad.com.cn/2016/01/08/dora项目搭建及配置/</id>
    <published>2016-01-08T16:27:49.000Z</published>
    <updated>2016-01-08T08:41:45.807Z</updated>
    <content type="html"><![CDATA[<h2 id="起源">起源</h2><p><img src="https://camo.githubusercontent.com/c4fd98749411cd9795b1fac25eab4d62dbd1a297/68747470733a2f2f6f732e616c697061796f626a656374732e636f6d2f726d73706f7274616c2f556e706a4852546e6b4a6c486658782e706e67" alt=""></p>
<p><a href="https://github.com/dora-js/dora" target="_blank" rel="external">dora</a></p>
<blockquote>
<p>原来的解决方案，如fis和spm 都有自己的install源，同样需要build和server</p>
</blockquote>
<p>命令行的方式已然使前端前进一大步，webpack可以直接引用npm的源，所以也免去了工具额外install的方式。但由于webpack 太难配。。。需要配置很多插件，这些对于开发成本比较高。</p>
<p>atool-build应运而生此工具集合了</p>
<ul>
<li><p>1.配置好的模板，比较规范的配置方式</p>
</li>
<li><p>2.可以额外自定义配置</p>
</li>
</ul>
<p>atool-build很方便，算是包了一层的webpack，但是起server还需要另外起。</p>
<p>所以dora应运而生。</p>
<p>dora将编译的过程放在自己起server的生命周期中，只要一个命令就完成</p>
<p>build watch server的阶段。</p>
<p>不需要多个terminal或者多个命令，只要一键配成，傻瓜式。</p>
<p>不过想用的更加可控起来还是需要进一步了解</p>
<h3 id="a-安装方式">a.安装方式</h3><p>一般项目</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i dora dora-plugin-proxy dora-plugin-atool-build atool-build --save</span><br></pre></td></tr></table></figure>
<p>由于dora-plugin-atool-build(只控制生命周期)配置均建立在atool-build上所以必须要装。</p>
<hr>
<h3 id="b-dora配置方式">b.dora配置方式</h3><ul>
<li>1.在package.json上写入entry。此entry和webpack的方式一致</li>
</ul>
<p>有字段对象和数组式</p>
<p>对象可以适用于多页的开发。</p>
<ul>
<li>2.运行./node_modules/atool-build/bin/atool-build</li>
</ul>
<p>试一试编译是否成功，dist目录中的结构是不是自己想要的</p>
<p>如果不行可能需要额外的配置，比如有的node_modules里面有.tpl文件。。。</p>
<ul>
<li>3.运行dora -p 8001 –plugins atool-build</li>
</ul>
<p><a href="http://127.0.0.1:8001/[entry].js" target="_blank" rel="external">http://127.0.0.1:8001/[entry].js</a></p>
<p>查看文件是不是想要的。</p>
<ul>
<li>4.配置页面引入</li>
</ul>
<p>如果是在后端模板中引入需要用绝对链接代理的方式。</p>
<p>在entry.js前加入common.js这个必须得加，不能通过覆盖webpack配置省略;</p>
<ul>
<li>5.配置package.json build</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">script:&#123;</span><br><span class="line"></span><br><span class="line">	<span class="string">"build"</span>:<span class="string">"dora -p 8001 --plugins atool-build"</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>*.sofa项目改进,改动点</p>
<pre><code>-<span class="ruby"> 安装dora, atool-build
</span>
-<span class="ruby"> package.json配置entry和script
</span>
-<span class="ruby"> 页面中配置common.js和entry.js
</span>
-<span class="ruby"> 组件不适宜到情况需要单独配webpack</span>
</code></pre><hr>
<p>c.dora代理方式</p>
<p>对于纯前端或者静态页面是非常方便的。</p>
<ul>
<li><p>1.执行 </p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i dora-plugin-proxy --save</span><br></pre></td></tr></table></figure>
</li>
<li><p>2.在chrome或者其他插件中配置将要代理的域名比如/a.alipayobjects.com对应到监听的本地端口(默认8989) 参考文档(<a href="https://github.com/dora-js/dora-plugin-proxy" target="_blank" rel="external"></a>当然这一步非必需，主要是跨域代理的话需要，然而现在跨域代理有些问题)</p>
</li>
<li><p>3.在根目录下用mockjs配置proxy.config.js文件将访问对方式和mock数据对应如</p>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">	<span class="keyword">var</span> mockjs = <span class="built_in">require</span>(<span class="string">'mockjs'</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line"></span><br><span class="line">  <span class="string">'GET /api/users/:id'</span>: mockjs.mock(&#123;name: <span class="string">'@Name'</span>&#125;),</span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>可以在根目录加入rule.js配置anyproxy的代理方式</p>
<p><a href="https://github.com/alibaba/anyproxy/wiki/%E4%BB%A3%E7%90%86%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E6%96%B0%E8%BD%AE%E5%AD%90%EF%BC%9Aanyproxy" target="_blank" rel="external">anyproxy rule</a></p>
<hr>
<h3 id="d-babel项目babel配置">d.babel项目babel配置</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i babel-cli babel-core babel-preset-stage-<span class="number">0</span> babel-preset-es2015 babel-loader --save;</span><br></pre></td></tr></table></figure>
<p>然后在package.json的’babel’字段或者.babelrc中加入</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">	presets:[<span class="string">'es2015'</span>,<span class="string">'stage0'</span>]</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>如果需要react</p>
<p>执行 <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i babel-preset-react --save</span><br></pre></td></tr></table></figure></p>
<p>再在配置的presets项中加入react</p>
<p>如果需要antd组件</p>
<p>执行<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i antd babel-plugin-add-<span class="built_in">module</span>-exports --save</span><br></pre></td></tr></table></figure></p>
<p>在初始化的文件夹中引入<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'antd/lib/index.css'</span>;</span><br></pre></td></tr></table></figure></p>
<hr>
<h3 id="e-如何写一个dora插件">e.如何写一个dora插件</h3><p>dora是建立在koa服务器基础上，此为著名程序员tj的一个项目。和express差不多</p>
<p>因此dora建立在中间件的基础上，建立了几个生命周期。以供更方便的处理标准化工程</p>
<p><a href="https://github.com/dora-js/dora/blob/greenkeeper-babel-core-6.4.0/docs/How-To-Write-A-Dora-Plugin.md" target="_blank" rel="external">dora插件写法</a></p>
<p>通过dora -p 8001 ./custom-plugin.js进行插件的调试。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="起源">起源</h2><p><img src="https://camo.githubusercontent.com/c4fd98749411cd9795b1fac25eab4d62dbd1a297/68747470733a2f2f6f732e616c697061]]>
    </summary>
    
      <category term="javascript 框架" scheme="http://www.soledad.com.cn/tags/javascript-%E6%A1%86%E6%9E%B6/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[D2大会收获]]></title>
    <link href="http://www.soledad.com.cn/2015/12/25/D2%E5%A4%A7%E4%BC%9A%E6%94%B6%E8%8E%B7/"/>
    <id>http://www.soledad.com.cn/2015/12/25/D2大会收获/</id>
    <published>2015-12-25T14:16:35.000Z</published>
    <updated>2015-12-25T09:42:43.087Z</updated>
    <content type="html"><![CDATA[<p><img src="http://ww2.sinaimg.cn/large/59e77323jw1ezbvgyujiyj20ft083mzb.jpg" alt=""></p>
<p><img src="http://ww3.sinaimg.cn/large/59e77323jw1ezbsalh64rj20ga099dgq.jpg" alt=""></p>
<blockquote>
<p>12月19日 阿里西溪园区 融合</p>
</blockquote>
<hr>
<h2 id="hybrird_移动端部分">hybrird 移动端部分</h2><hr>
<h3 id="1-从Web页面到Native_UI">1.从Web页面到Native UI</h3><p><img src="http://ww4.sinaimg.cn/large/59e77323jw1ezbqnx9h1hj20gs0gq77l.jpg" alt="blend"></p>
<p><a href="http://clouda.baidu.com/blend/introduction/introduction" target="_blank" rel="external">!blend解决方案</a></p>
<p><a href="http://clouda.baidu.com/blend2" target="_blank" rel="external">!blendUI</a></p>
<p><a href="http://clouda.baidu.com/blend2/docs/" target="_blank" rel="external">!blendUI文档</a></p>
<p>提供</p>
<ul>
<li><p>页面框架</p>
</li>
<li><p>页面组件</p>
</li>
<li><p>api后端服务</p>
</li>
<li><p>打包集成 <a href="http://developer.baidu.com/" target="_blank" rel="external">百度云开发者平台</a></p>
</li>
</ul>
<p>主要用于 <a href="http://ww4.sinaimg.cn/large/59e77323jw1ezbqwqczvwj206f0bfq3e.jpg" target="_blank" rel="external">百度浏览器集成</a></p>
<blockquote>
<p>意义在于开发百度的云组件还是比较方便的，侧滑等ui动画比较流畅</p>
</blockquote>
<p>app总体感觉不可控，限制于api提供的接口，</p>
<p>bridge并不特别通用</p>
<p><a href="http://clouda.baidu.com/sample" target="_blank" rel="external">sample</a></p>
<ul>
<li>github 地址</li>
</ul>
<p><a href="https://github.com/Clouda-team" target="_blank" rel="external">blend</a></p>
<hr>
<p>另外推荐两款类似</p>
<ul>
<li>Hbuilder 提供比较强大的bridge.js 提供页面组件，同时可以扩展nativeapi ，提供ide，云打包 </li>
</ul>
<p>不提供后端api</p>
<p><a href="http://www.dcloud.io/" target="_blank" rel="external">dcloud</a> 简单易学，很多公司组织在用</p>
<hr>
<ul>
<li>提供页面组件 后端api native</li>
</ul>
<p>apicloud 提供比较强大的组件，接口，提供ide，比较大厚重</p>
<p><a href="http://www.apicloud.com/" target="_blank" rel="external">apicloud</a></p>
<hr>
<h3 id="2-_samurai-native">2. samurai-native</h3><p>通过改变native webkit的方式将 native ui组件直接嵌入native中</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="title">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="title">UICollectionViewCell</span> <span class="attribute">is-static</span> <span class="attribute">is-row</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"profile-wrapper"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"profile-attribution"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"profile-segment no-wrap"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"segment-wrapper"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"segment-count"</span>&gt;</span>10,875<span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"segment-suffix"</span>&gt;</span>Followers<span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"profile-segment no-wrap"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"segment-wrapper"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"segment-count"</span>&gt;</span>199<span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"segment-suffix"</span>&gt;</span>Followers<span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">UICollectionViewCell</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="title">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>属于geek玩的感觉，个人开发，觉得也花了不少心血</p>
<p>但是</p>
<p>1.不支持android</p>
<p>2.js支持有限</p>
<p>3.需要根据技术不断的更新更新自己的组件。</p>
<p><a href="http://hackers-painters.github.io/samurai-native/" target="_blank" rel="external">offical官网</a></p>
<p><a href="https://github.com/hackers-painters/samurai-native" target="_blank" rel="external">github地址</a></p>
<hr>
<h2 id="web_组件_服务化">web 组件 服务化</h2><hr>
<h3 id="1-ques_q-js">1.ques q.js</h3><p><img src="http://ww3.sinaimg.cn/large/59e77323jw1ezbrlmozcsj208o08e0tn.jpg" alt=""></p>
<p>属于借鉴了google流行框架polymer，和非主流框架vue.js</p>
<p>q.js号称兼容到ie6，然而vue.js只支持到ie9</p>
<p><a href="http://cn.vuejs.org/" target="_blank" rel="external">vue</a></p>
<p>通过将数据和组件绑定到方式进行，既可以双向绑定也可以单向绑定</p>
<p><a href="http://imweb.github.io/Q.js/" target="_blank" rel="external">q.js</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#10;var vm = new Q(&#123;&#10;    el: &#39;#demo&#39;,&#10;    data: &#123;&#10;        msg: &#39;hello&#39;&#10;    &#125;&#10;&#125;);&#10;vm.$set(&#39;msg&#39;, obj.msg);</span><br></pre></td></tr></table></figure>
<p>值得借鉴的地方</p>
<p>有组件基础的统一方式，对于底层开发同学来说，调用比较规范</p>
<p>比如像hermes里面同样内容的参数有的是el，有的叫trigger，有的叫target。</p>
<p>有些外漏的方式利于调用同事学习</p>
<p>不可取的地方</p>
<p>用了很大的两个库 underscore jquery集成到框架中。作为组件有点庞大。</p>
<p>有zepto jquery native三个版本，基本上是组装了一遍。</p>
<p>2.ques</p>
<p><a href="http://miniflycn.github.io/Ques/" target="_blank" rel="external">ques</a></p>
<p><a href="https://github.com/miniflycn/Ques" target="_blank" rel="external">github</a> </p>
<p><a href="https://github.com/miniflycn/Ques/blob/master/src/components.html" target="_blank" rel="external">demo</a></p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="title">ui-header</span>&gt;</span>	</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="title">h1</span>&gt;</span>Ques<span class="tag">&lt;/<span class="title">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="title">p</span>&gt;</span>Road to the future.<span class="tag">&lt;/<span class="title">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="title">ui-header</span>&gt;</span></span><br><span class="line">``` </span><br><span class="line"></span><br><span class="line">自定义标签到方式，将css和html融为一体，主要用于qq的部分产品</span><br><span class="line"></span><br><span class="line">看上去代码非常多和杂乱，个人开发工作量看上去不小</span><br><span class="line"></span><br><span class="line">[polymer](http://docs.polymerchina.org/1.0/)</span><br><span class="line"></span><br><span class="line">```html</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="title">dom-module</span> <span class="attribute">id</span>=<span class="value">"contact-card"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">link</span> <span class="attribute">rel</span>=<span class="value">"import"</span> <span class="attribute">type</span>=<span class="value">"css"</span> <span class="attribute">href</span>=<span class="value">"contact-card.css"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">content</span>&gt;</span><span class="tag">&lt;/<span class="title">content</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">iron-icon</span> <span class="attribute">icon</span>=<span class="value">"star"</span> <span class="attribute">hidden</span>$=<span class="value">"&#123;&#123;!starred&#125;&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="title">iron-icon</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="title">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">dom-module</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="title">script</span>&gt;</span><span class="actionscript"></span><br><span class="line">  Polymer(&#123;</span><br><span class="line">    <span class="keyword">is</span>: <span class="string">'contact-card'</span>,</span><br><span class="line">    properties: &#123;</span><br><span class="line">      starred: Boolean</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<hr>
<p>2.RAP 接口工具 *</p>
<p><img src="http://ww1.sinaimg.cn/large/59e77323jw1ezbrvdtqrtj208l07wdgt.jpg" alt="RAP"></p>
<p><a href="http://rapapi.net/" target="_blank" rel="external"></a></p>
<p><a href="https://github.com/thx/RAP" target="_blank" rel="external"></a></p>
<p>解决问题</p>
<p>1.接口文档的整理和定义</p>
<p>2.接口的异步调用，方便的在开发环境中生成数据</p>
<p>3.mock数据</p>
<p>4.测试数据</p>
<blockquote>
<p>前端开发的福音</p>
</blockquote>
<p><img src="http://ww1.sinaimg.cn/large/59e77323jw1ezbuunzclbj20ga08cabs.jpg" alt="流程改进"></p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="doctype">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="title">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="title">meta</span> <span class="attribute">charset</span>=<span class="value">"utf-8"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span> <span class="attribute">src</span>=<span class="value">"</span><br><span class="line"></span><br><span class="line">http://cdn.bootcss.com/jquery/3.0.0-alpha1/jquery.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="title">script</span> <span class="attribute">src</span>=<span class="value">"http://rapapi.net/rap.plugin.js?projectId=63"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="title">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line"></span><br><span class="line">	$.ajax(&#123;</span><br><span class="line"></span><br><span class="line">		url:<span class="string">"ceshi_link.json"</span>,</span><br><span class="line"></span><br><span class="line">		datatype:<span class="string">"json"</span>,</span><br><span class="line"></span><br><span class="line">		type:<span class="string">"get"</span>,</span><br><span class="line"></span><br><span class="line">		success:<span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">			<span class="comment">// body...</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(res);</span><br><span class="line"></span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">	&#125;);</span><br><span class="line"></span><br><span class="line">	</span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="http://ww3.sinaimg.cn/large/59e77323jw1ezbv45zjlfj20ax0bf0tt.jpg" alt=""></p>
<p>不方便的地方，本地自己部署</p>
<hr>
<p>数据可视化</p>
<hr>
<p>datav 数据流</p>
<p><img src="http://ww4.sinaimg.cn/large/59e77323jw1ezbru0c8x0j208f08vab0.jpg" alt="datav"></p>
<p>分屏处理 (城市模型贴图处理)</p>
<p>canvas (处理100～1000数据)</p>
<p>svg (处理1000～100000数据)</p>
<p>webgl(处理100000＋数据)</p>
<p><a href="http://threejs.org/" target="_blank" rel="external">three.js</a></p>
<p><a href="http://datavlab.org/datavjs/" target="_blank" rel="external">datav</a></p>
<p><a href="http://datavlab.org/datavjs/#treemap" target="_blank" rel="external">demo</a></p>
<p><a href="https://github.com/TBEDP/datavjs" target="_blank" rel="external">github</a></p>
<p>相关推荐</p>
<p>和antd配合的数据模块</p>
<p><a href="https://site.alipay.net/datavisualization/ant-v/product/g2/" target="_blank" rel="external">G2</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="http://ww2.sinaimg.cn/large/59e77323jw1ezbvgyujiyj20ft083mzb.jpg" alt=""></p>
<p><img src="http://ww3.sinaimg.cn/large/59e77323]]>
    </summary>
    
      <category term="活动" scheme="http://www.soledad.com.cn/tags/%E6%B4%BB%E5%8A%A8/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[阿里纪录片－扬子江中的大鳄有感]]></title>
    <link href="http://www.soledad.com.cn/2015/11/22/%E9%98%BF%E9%87%8C%E7%BA%AA%E5%BD%95%E7%89%87%EF%BC%8D%E6%89%AC%E5%AD%90%E6%B1%9F%E4%B8%AD%E7%9A%84%E5%A4%A7%E9%B3%84%E6%9C%89%E6%84%9F/"/>
    <id>http://www.soledad.com.cn/2015/11/22/阿里纪录片－扬子江中的大鳄有感/</id>
    <published>2015-11-22T13:39:52.000Z</published>
    <updated>2015-11-22T05:40:37.644Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>ebay可能是条海里的鲨鱼，<br>可我是扬子江里的鳄鱼，<br>如果我们在海里交战，我便输了，<br>可如果我们在江里交战我便赢了。</p>
</blockquote>
<div class="video-container"><iframe src="http://player.youku.com/embed/XODQ0NzcwNTYw" frameborder="0" allowfullscreen></iframe></div>
<p>在百阿培训到时候看到扬子江大鳄关于阿里巴巴到纪录片</p>
<h2 id="大鳄">大鳄</h2><p>当时没有看完，回来将其看完感触颇深。<br><img src="http://ww2.sinaimg.cn/large/59e77323gw1ey9olo2nmej20cn054jsb.jpg" alt=""></p>
<p>这是一个马云创立的帝国时代。<br>这一路走来，经历了各种风雨，有成功有失败。<br>（如果细细回味，失败的次数比成功多，但是成功比失败更持久）<br>正如马云所说<br>心中无敌，则无敌于天下<br>就是说心中没有你这个敌人，便不会想到与你竞争。</p>
<p>这也是阿里的价值观文化。<br>阿里和其他传统互联网公司不一样。<br>其他的互联网公司是做产品或者是有特别的牛人。<br>但是阿里却是靠人们的配合，价值观，文化，梦想，毅力，这些疯狂而励志的精神走到这一步的。<br>这对平凡人的我也有深远对影响。</p>
<p>阿里的价值观已经和普通做生意的普世价值观不一样。<br>普世价值观在于如果去赚钱。而阿里的价值观在于如何去为社会创造价值。<br>这也正是马云拒绝和ebay合作的原因，因为ebay的野心很大但是并不想要为中国的消费者和市场创造出价值。<br>这也是我感触最深和领悟最多的地方。</p>
<h2 id="阿里成败">阿里成败</h2><p>细数纪录片中阿里走来的失败<br>1.马云翻译社时候失败<br>2.马云中国黄页失败<br>3.马云将总部建立硅谷运营失败<br>4.马云管理团队失败<br>5.雅虎中国在中国运营失败<br>6.马云希望做搜索引擎打败百度失败。<br>细数纪录片中成功的地方<br>1.做阿里巴巴成功<br>2.taobao成功打败ebay<br>来一个个分析一下纪录片中马云失败的主要原因<br>也来看看马云之后一步步成功的主要原因。</p>
<h4 id="失败的原因">失败的原因</h4><p>a.翻译社的时候失败(所选内容是为社会创造价值，但是运营人力成本太高)<br>b.中国黄页失败(所选内容为社会创造价值，但是需要和不断国家打交到，环境对此认识不够，失败)<br>c.总部建立在硅谷运营(选择了一批优秀的人，但是由于多地运营争取资源内耗严重)<br>d.马云管理团队失败(太多时间的推广宣传，没有心思治理公司)<br>e.yahoo中国运营失败(同样是yahoo的员工文化不符，对于本地公司并不看好，喜欢外国的公司)<br>f.搜索引擎失败(对于搜索引擎的规划和计划有限制，没有考虑清楚制作方向)</p>
<h4 id="成功的原因">成功的原因</h4><p>a.阿里巴巴成功(很大程度上来自于团队的支持，迅速做出来阿里巴巴网站，也来自于蔡的加入，迅速融资融到了整个公司可以烧几年到钱)<br>b.taobao成功(来自于孙彤宇等人将taobao网迅速建成，同时相对于对手的产品有很多变化，重要的是旺旺和支付宝支付体系的建立)</p>
<h3 id="总结">总结</h3><p>最有深刻对体会是(做正确对事，比用正确对方法做错误对事情要重要对多)<br>马云这一路上失败总结起来虽然都是客观原因，也有很多自己的问题，做决定做的过于匆忙，对团队管理对认识不够。<br>马云是一个善于演讲，很有远见的人，对于市场的变化也有很高程度的反馈，所以这些方面非常成功。<br>但是对于做正确的事情，还需要正确的人来做正确的事情。这也是为什么很多成功，来源于团队的努力。<br>团队在一起才能走的更远，所以融资需要蔡崇信，管理需要关明生。<br>也是硅谷和yahoo的同事加入并没有能助长公司的主要原因。<br>对的人做对的事情也才能导致公司不断向前发展。<br>结合之前对培训，加之超前的思考和失败的准备。<br><img src="http://ww2.sinaimg.cn/large/59e77323gw1ey9p3y9dnrj20a20dk0uo.jpg" alt=""><br>﻿<br>片中有很多地方也是很打动我的。<br>1.马云做黄页的时候一个个去上门劝说有关部门领导，被各种受阻，仍然不放弃希望，也快速分析时局转变方向。<br>2.当时那么辛苦的去做，阿里整个也像是一个大家庭，大江湖，大家在危难的时刻都没有走，力挺公司走上成功。<br>3.当马云一直努力宣传自己公司，被说一直没有赚钱，状态很久，大家都很灰心，一直撑到一日赚50w公司才走向了成功，当时宣布开始盈利的时候，大家从蛰伏的状态中破茧而出的喜悦令人难忘。<br>4.当sars病毒开始时所有员工被隔离，业务难以进展，这时候又ebay来到了中国，不得不临时应激对战，却取得了最终的成功，令人难以想象。<br>5.经历了这么多，马云才从公司的限制中走出来，开始发挥自己真正的实力，对公司发展，社会价值对认识，并通过积极布道为社会产生正面对影响。</p>
<p>还是把价值观对废话说一遍吧<br>1.客户第一，员工第二，股东第三（做对社会有价值对事情，不受股东的想法控制）<br>2.今天很残酷，明天更残酷，后天很美好（要心怀坚定的信念看到后天的阳光）<br>3.六脉神剑(客户第一，团队协作，拥抱变化，激情，诚信，敬业)<br><img src="http://ww2.sinaimg.cn/large/59e77323gw1ey9ozy99euj20i60d3404.jpg" alt=""><br>4.积极 用脑 皮实 自省</p>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>ebay可能是条海里的鲨鱼，<br>可我是扬子江里的鳄鱼，<br>如果我们在海里交战，我便输了，<br>可如果我们在江里交战我便赢了。</p>
</blockquote>
<div class="video-container"><iframe s]]>
    </summary>
    
      <category term="读后感" scheme="http://www.soledad.com.cn/tags/%E8%AF%BB%E5%90%8E%E6%84%9F/"/>
    
      <category term="阿里" scheme="http://www.soledad.com.cn/tags/%E9%98%BF%E9%87%8C/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[百阿培训]]></title>
    <link href="http://www.soledad.com.cn/2015/11/20/%E7%99%BE%E9%98%BF%E5%9F%B9%E8%AE%AD/"/>
    <id>http://www.soledad.com.cn/2015/11/20/百阿培训/</id>
    <published>2015-11-20T15:29:03.000Z</published>
    <updated>2015-11-20T07:44:36.609Z</updated>
    <content type="html"><![CDATA[<h2 id="百阿培训总结">百阿培训总结</h2><blockquote>
<p>本周的2015-11-17～2015-11-20<br>报名了百阿小班，这是所有阿里的新同学在入职不久必须要参加的课程。<br>课程还是非常有趣的。</p>
</blockquote>
<h3 id="课程安排">课程安排</h3><p>大家来自各自的部门，年龄也不一样，面对各种头脑的风暴经过三天美好的时光。<br>课程是这样安排的<br><img src="http://ww2.sinaimg.cn/large/59e77323gw1ey7fbjmgqij20sa0d0gop.jpg" alt=""></p>
<p>不幸的是急急忙忙的从上海赶过来，居然看错了时间。<br>还好杭州和上海离的比较近，酒店在正式开课前4小时确认入住才反应过来。<br><img src="http://ww3.sinaimg.cn/large/59e77323gw1ey7fi1pjv4j20c807xt9g.jpg" alt=""></p>
<p>还好，及时赶到了雨中的杭州支付宝黄龙时代总部。<br><img src="http://ww3.sinaimg.cn/large/59e77323gw1ey7fkcltywj208d08k3z6.jpg" alt=""></p>
<hr>
<h3 id="第一天:初识百阿">第一天:初识百阿</h3><p>当我参加的时候已经是433期了<br>刚开始半天就开始热场了。<br>拍了个性感的照片<br><img src="http://ww2.sinaimg.cn/large/59e77323gw1ey7gz51505j205i0863yw.jpg" alt=""><br>大家互相介绍，做互动游戏，分组完成任务。<br>完成了万里长城的项目后，被分到了1组<br><img src="http://ww3.sinaimg.cn/large/59e77323gw1ey7geea2ckj20c308x40a.jpg" alt=""><br>然后又来奇葩同学的项目好多同学的生活真是奇葩。<br>尤其是一个灵。异的同学，遇到的各种见鬼的事件，还没来得及诉说自己的事故，就结束了这个环节<br><img src="http://ww2.sinaimg.cn/large/59e77323gw1ey7gh68qkhj20fn08jjtx.jpg" alt=""></p>
<p>然后大家各自选了班干，班干真够多的，又正班干，副班干，还有小棉袄，小秋裤，cto（n多名品牌维护官）<br>相对于任务来说并不多。<br>晚上还得做ppt每个组来总结阿里前世今生的一部分。不幸的是酒店wifi悲剧，而且也有些疲惫来，没能参加。</p>
<p>第一天的活动差不多结束了。没能太积极融入。第一天的活动有些心得。</p>
<h5 id="作为队员">作为队员</h5><ul>
<li>鉴于常年程序员的生活，和疲惫的加班身心作为借口，没有很好的幽默和交流能力。一定要尽力恢复幽默感和记忆力，尽量能尽快记住别人的名字和各种必要信息。多读读幽默和与人交往的书籍</li>
</ul>
<h5 id="作为leader">作为leader</h5><ul>
<li>了解每个人的长处，并且尽快熟悉整个游戏规则，找出规则中最适合的人。</li>
<li>参与游戏,表现出自信，对于老师给出的题目积极思考切入点和规则。从不同角度不同角色想问题。</li>
<li>可以先表达出自己的意图，问大家情况并引导大家一个个表达出来头脑里的想法记录。.将这些内容先记录后筛选出来重点。</li>
<li>按照题目和结构进行整合切入，通过数据可视化进行讲解。</li>
</ul>
<h4 id="会后">会后</h4><ul>
<li>要深刻快速总结才能有所成长</li>
</ul>
<blockquote>
<p>作为参与者和组织者，如何建立轻松愉快积极的氛围是非常重要的，不仅要根据题目框架积极思考，还要引领大家做出总结，最后整合资料进行表达。</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="百阿培训总结">百阿培训总结</h2><blockquote>
<p>本周的2015-11-17～2015-11-20<br>报名了百阿小班，这是所有阿里的新同学在入职不久必须要参加的课程。<br>课程还是非常有趣的。</p>
</blockquote>
<h3 ]]>
    </summary>
    
      <category term="工作" scheme="http://www.soledad.com.cn/tags/%E5%B7%A5%E4%BD%9C/"/>
    
      <category term="生活" scheme="http://www.soledad.com.cn/tags/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="阿里" scheme="http://www.soledad.com.cn/tags/%E9%98%BF%E9%87%8C/"/>
    
      <category term="生活" scheme="http://www.soledad.com.cn/categories/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[ node Log神器chalk]]></title>
    <link href="http://www.soledad.com.cn/2015/11/07/node-Log%E7%A5%9E%E5%99%A8chalk/"/>
    <id>http://www.soledad.com.cn/2015/11/07/node-Log神器chalk/</id>
    <published>2015-11-07T11:06:50.000Z</published>
    <updated>2015-11-20T07:44:36.609Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>好久都没有写blog了,最近近了新单位，发现记录是在是非常重要都事情。<br>不但日报周报需要认真对待，对待技术更要以耐心积跬步都心理来进行。方得始终。</p>
</blockquote>
<p>为了更好都书写blog所以对blog不断的迭代和改进是少不了的,研究开始，发现输出的时候用到了chalk.js这个在之前其他很多项目中也看到过，但是一直没用过.</p>
<h2 id="Chalk-js">Chalk.js</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm i hexo-cli --save</span><br></pre></td></tr></table></figure>
<p>发现目录中有个logger.js</p>
<p>用到了chalk<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> chalk = <span class="built_in">require</span>(<span class="string">'chalk'</span>);</span><br></pre></td></tr></table></figure></p>
<p>看上去用起来非常方便</p>
<p>文章在此<br><a href="https://github.com/chalk/chalk" target="_blank" rel="external">“chalk”</a></p>
<p>支持红绿蓝(三原色)黄品青（三间色）及黑白灰<br><img src="http://ww1.sinaimg.cn/large/59e77323gw1exs7v56t2ej214406440a.jpg" alt=""></p>
<hr>
<p>不仅可以多个api同时使用也可以内嵌使用，像这样<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">const chalk = require(&#39;chalk&#39;);&#10;console.log(chalk.red(&#39;Hello&#39;, chalk.green.bgBlue(&#39;world&#39;)))</span><br></pre></td></tr></table></figure></p>
<hr>
<p>同时也可以支持控制台全局调试</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --global chalk-cli</span><br></pre></td></tr></table></figure>
<p>在terminal里面执行<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;chalk bold cyan <span class="string">"hello world"</span>;</span><br></pre></td></tr></table></figure></p>
<p>即可</p>
<h2 id="项目中使用">项目中使用</h2><p>在项目中使用也是非常方便的，可以将其再封装一次。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> ctx = <span class="keyword">new</span> chalk.constructor(&#123;enabled: <span class="literal">false</span>&#125;);</span><br><span class="line"><span class="keyword">var</span> error = ctx.red;</span><br></pre></td></tr></table></figure></p>
<h2 id="总结">总结</h2><p>说白了还是希望好调试一下罢了。</p>
<h2 id="Related">Related</h2><p><a href="https://github.com/chalk/chalk" target="_blank" rel="external">“chalk”</a><br><a href="https://github.com/chalk/chalk-cli" target="_blank" rel="external">“chalk-cli”</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>好久都没有写blog了,最近近了新单位，发现记录是在是非常重要都事情。<br>不但日报周报需要认真对待，对待技术更要以耐心积跬步都心理来进行。方得始终。</p>
</blockquote>
<p>为了更好都书写blog所以对blog不断的迭代和改进]]>
    </summary>
    
      <category term="module" scheme="http://www.soledad.com.cn/tags/module/"/>
    
      <category term="node" scheme="http://www.soledad.com.cn/tags/node/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[去宁波旅行]]></title>
    <link href="http://www.soledad.com.cn/2015/10/09/%E5%8E%BB%E6%97%85%E8%A1%8C/"/>
    <id>http://www.soledad.com.cn/2015/10/09/去旅行/</id>
    <published>2015-10-09T14:34:36.000Z</published>
    <updated>2015-11-20T07:44:36.609Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>最近终于熬过了各种人生艰辛之路，十一黄金周该休息一下了，报了一个途牛的三日团，不过还是挺坑的<br>ddd</p>
</blockquote>
<hr>
<p>1.来到宁波东钱湖，小普陀,da</p>
<p><img src="http://7xi5q9.com1.z0.glb.clouddn.com/15-10-9/47613268.jpg" alt=""></p>
<p><img src="http://7xi5q9.com1.z0.glb.clouddn.com/15-10-9/67228065.jpg" alt=""></p>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>最近终于熬过了各种人生艰辛之路，十一黄金周该休息一下了，报了一个途牛的三日团，不过还是挺坑的<br>ddd</p>
</blockquote>
<hr>
<p>1.来到宁波东钱湖，小普陀,da</p>
<p><img src="http://7xi]]>
    </summary>
    
      <category term="国内" scheme="http://www.soledad.com.cn/tags/%E5%9B%BD%E5%86%85/"/>
    
      <category term="旅游" scheme="http://www.soledad.com.cn/tags/%E6%97%85%E6%B8%B8/"/>
    
      <category term="个人生活" scheme="http://www.soledad.com.cn/categories/%E4%B8%AA%E4%BA%BA%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[深入学习vi]]></title>
    <link href="http://www.soledad.com.cn/2014/10/12/e6-b7-b1-e5-85-a5-e5-ad-a6-e4-b9-a0vi/"/>
    <id>http://www.soledad.com.cn/2014/10/12/e6-b7-b1-e5-85-a5-e5-ad-a6-e4-b9-a0vi/</id>
    <published>2014-10-12T08:21:29.000Z</published>
    <updated>2015-10-17T04:04:41.848Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>vi是一个非常好用而且通用的编辑器，当用unix和os系统的时候都可以用到。而且如果换一台电脑，需要处理也非常得心应手，这是程序员的必备工具啊</p>
</blockquote>
<h3 id="vi的三种模式">vi的三种模式</h3><ol>
<li>命令模式 &#91;在shell下输入vi file即可进入&#93; (进行复制 删除 替换 跳转等简单操作)</li>
<li>底部模式 &#91;在命令模式下按住:进入&#93; (进行一些功能设置有点像图形界面的菜单栏)</li>
<li>插入模式 <a href="进行最基本的文字插入">在命令行下按住a i o</a></li>
</ol>
<h3 id="vi的三种模式转换">vi的三种模式转换</h3><p>a.一进入vi的面板便在了vi的命令模式之下，点击a i o都可以进入</p>
<ol>
<li>点击i(insert)表示在当前位置插入</li>
<li>点击a(append)表示当前文字下一行插入</li>
<li>点击o(otherline)表示在下一行开始插入</li>
</ol>
<p>b.插入模式没有什么特别的就是普通的插入文字罢了。按住ESC键进入命令行模式，插入模式部分就不做讲解了。</p>
<p>按住:进入底部工具栏</p>
<p>所以说命令行模式是一开始进入的模式而且也相当于作为中转站进行其他模式的切换，其他模式要进入命令行模式均按住ESC即可 插入模式和底部模式之间切换均要先切换进入命令行模式然后再进行相互之间的切换。还是非常方便的</p>
<h3 id="命令行功能">命令行功能</h3><p>一张图看看有哪些命令行模式的功能</p>
<p><img src="http://img1.ph.126.net/LOiSRySSWnVoDAgUf3uZNw==/4807311127341480640.gif" alt=""></p>
<h3 id="底部工具栏功能(添加:表示进入底部工作的模式)">底部工具栏功能(添加:表示进入底部工作的模式)</h3><p>1&#46;保存:w 2.退出:q 3.强制按住!</p>
<p>保存并退出 :wq 强制退出不保存按住:q!<br>以上是最常用的一些模式</p>
<p>比较常用的还有:set nu设置行数</p>
<p>一张图看看有哪些命令行模式</p>
<p><img src="http://img0.ph.126.net/iGuRXZ8DYN6mVRJRz3lNvg==/2769432295873221849.jpg" alt=""></p>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>vi是一个非常好用而且通用的编辑器，当用unix和os系统的时候都可以用到。而且如果换一台电脑，需要处理也非常得心应手，这是程序员的必备工具啊</p>
</blockquote>
<h3 id="vi的三种模式">vi的三种模式</h3><ol>
]]>
    </summary>
    
      <category term="未分类" scheme="http://www.soledad.com.cn/categories/%E6%9C%AA%E5%88%86%E7%B1%BB/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[深度理解git]]></title>
    <link href="http://www.soledad.com.cn/2014/10/06/e6-b7-b1-e5-ba-a6-e7-90-86-e8-a7-a3git/"/>
    <id>http://www.soledad.com.cn/2014/10/06/e6-b7-b1-e5-ba-a6-e7-90-86-e8-a7-a3git/</id>
    <published>2014-10-06T12:08:44.000Z</published>
    <updated>2015-10-17T04:04:42.020Z</updated>
    <content type="html"><![CDATA[<p>git是一款非常独到的版本控制管理器,通过git可以方便的进行版本的管理，与svn及tfs的最大的不同是可以将各种版本的切换放在本地进行控制。是一款非常好用的方式，只在需要的时候才与远程进行同步。之前用svn和tfs也没发生多大的问题，但是其实问题很多，比如如果网断了就不能工作了，虽然版本的控制一直异常混乱，但是由于合并由人工完成而且参与同一个文件的合作机会并不是很多所以也一直没有造成太大的诟病。</p>
<pre><code>不过问题就是这样放在那里一直就是问题的根源。当时也是UNIX的创始人也遇到如此问题，但是当时由于是收费的一些版本控制貌似还是不错的，但是由于收费而且由于当时UNIX的版本控制和其合作的很不愉快所以研发出了这个耳熟能详的版本控制工具。貌似是一个大神一周的杰作，我三番五次学了很久也没能全部了解清楚，差距啊...

放在本地的版本控制工具其原理就如同打游戏一般，我将其原理在我脑中的印象以下图的方式展示出来。

![](http://img1.ph.126.net/5kQd6Y42RFzFi1JyCVPyMQ==/6608948890283217814.jpg)

&amp;nbsp;

先说说工作区。工作区就是文件夹，也就是我们说的当前目录。这个没什么问题，是非常简单的。文件系统及其复杂，也许是由于我不懂。因为其在linux，mac及windows系统上有着完全不一样的概念。用蓝色标注的是一些理论概念的东西。黄色标注的是一些操作。

先说蓝色部分。

1.就是传说中的工作区，也就是我们没将其形成git的时候的初始形态。

而git就相当于在此之上建立了一个工作区又边部分的版本库。

2.版本库分为两个部分，1个是stage也是暂存区2.另一个是分支。

如果这样说相信一定是比较难理解，其实就相当于游戏部分，我们当前玩到的关卡就是工作区。

当我们需要大老怪的的时候或者需要改天玩的时候需要将其添加到缓存区。

我们这里就相当于点击了游戏的保存。也相当于文件下的ctrl+s如果没有按住这个或者当时没有保存的觉悟那我们的文件版本里就完全找不到的说了。

3.那分支就相当于游戏中的人物槽，或者是游戏记录。可能有好几个朋友或者不同进度需要我们进行管理

所以我们一般在玩游戏的过程中先建立一个主控制槽位，也就是git中的master。

游戏中我们保持版本的流程一般是不顾一切的在游戏中挥洒，到了需要的时候，点击保存，然后我们提交到记录里面，有的情况需要给记录取一个名字或自动生成一个名字以供参考我们的记录是哪一个，当我们失败或者到了下一次点击开记录的时候一切都恢复了，所以这样是很简单的一个小工具应用的感觉。

4.我们当前在哪个记录或者人物槽进行游戏，当前的人物槽即为git中的HEAD

5.分支上面解释过，这里就不详细说了。

6.有的游戏做好了备份后可以进行云存储，这一点会比较高端，因为只有放在了云里面（其实就是远端服务器，帮你不弄丢你的存储）不会丢失记录，这个云端的git游戏备份地方默认即是origin，可以将origin对应于github的所在库。

有了对git认识的概念后我们应该属性一下git的操作，这个东西学好了对工作和学习帮助不少，毕竟全世界很多有名的开源组织的代码都在git上。但是git比游戏的版本控制要强大的多了，他可以记录我们的每一次的提交修改，并且随意回到其中提交过的记录中去。

<span class="keyword">*</span><span class="keyword">*</span>a.git的下载<span class="keyword">*</span><span class="keyword">*</span>

<span class="variable">&lt;span style="line-height: 1.6em;"&gt;</span>要开始git的学习首先要下载git，貌似只有windows的git需要下载。而且win8及其凶残。很难安装，总之，遇到问题请百度之，这里直接进入git安装好以后的学习。<span class="variable">&lt;/span&gt;</span>

<span class="keyword">*</span><span class="keyword">*</span>b.git用户生成<span class="keyword">*</span><span class="keyword">*</span>

当你安装好git并将其添加到环境变量后（一般是系统自带的）我们首先对身份进行确认，这就像刚下载一个新游戏的时候需要登录和注册了。如果不登录的话，也就是在游戏中，完全没有存在感，游戏不会告诉你建的工作区这是你的而已完全没有其他的影响

建立git的账户我们用

git config --global user.name &amp;<span class="comment">#39;Yourname&amp;#39;</span>

got config --glabal user.email &amp;<span class="comment">#39;YourEmail&amp;#39;</span>

我们将真实的名字和email填入即可告诉我们的git，你现在的主人是我，我们即将开始旅程，开始工作了。

<span class="keyword">*</span><span class="keyword">*</span>c.git初始化<span class="keyword">*</span><span class="keyword">*</span>

我们创建好内容后我们可以，开始开动了。我们首先将代码存放的工作区也就是我们即将开始的战场清理干净，然后对其输入

git init

这时候我们将自己的工作区完善完成了。

<span class="keyword">*</span><span class="keyword">*</span>d.git缓存区[缓存区的意义，切换分支时保存缓存区]<span class="keyword">*</span><span class="keyword">*</span>

有了战场我们可以创建文件和文件夹了，毕竟这才是程序员的武器库。

当我们开发的心满意足的时候我们可以将内容添加到记录里面了。

添加到记录之前我们可以通过git status先看看缓存区也就是stage的记录，如果有改变和需要提交的内容我们才开始进行接下来的工作。

我们发现有些修改需要提交这时候我们用黄色1的操作将其添加到工作区中。git add [要提交的文件]如果此文件夹下的所有文件都需要提交则直接git add .即可，如果每次执行这个文件但是有不想提交的内容比如系统文件，工作区文件我的WebStorm每次都会将工作区环境写入一个.idea的文件夹里，这时候我们可以在根目录下面写一个.gitignore的文件里面有我们存储每次git add .不想添加的内容。

比如我不想添加.idea文件夹里面的所有内容，那么我们就再.gitignore的文件里面写一句

.idea/

即可。不过这时候我们输入完git add .还并没有将其添加到git游戏的记录里面，只能说存到了缓存区里面。利用git status可以看出来缓存区stage的记录，缓存区意义不大，如果需要切换分支（git游戏的记录）则必须将缓存区的内容提交到分支里，否则不能正常切其他的分支。

如果不存到缓存区里面，切分支则工作区的内容会被带到其他的分支中去。那么比如我现在打怪大到一半，突然想到记录2里面有个很重要的东西去取。但是我现在的记录还不想存入记录里面。那么我们可以将文件add后将现场封锁起来，现场是另一个记录区域的存在用于存储未完成的事业，可以用git stash list来查看现场的记录。我们用git stash将现场环境压入暂时的工作区里面，等我们去记录2里面把宝藏取到后再进行记录1中未完成的事业，这种情况常见于bug存在的时候我们开发并没有完成，但是中途需要插入一个对bug修改的分支那我们必须将add过后的git分支现场封锁，然后切换到另一个分支去救火，完事后我们再回来，将这个封锁的现场打开进行工作。如果你只有一个工作区的话用版本号git statsh pop即可，如果有多个的话....首先管理已经很混乱了，可以用git stash list查看需要恢复的工作区，将相应的工作区git stash apply stash<span class="comment">@{n}恢复。然后用git stash drop stash@{n}即可。stage是工作区的概念，如果我们管理的好，那么我们只需要在提交到真正的分支上前将内容add 到stage即可，如果我们切换分支没做好准备可以将现场封锁起来对分支切换进行进一步的工作。</span>

<span class="keyword">*</span><span class="keyword">*</span>e.git的回退<span class="keyword">*</span><span class="keyword">*</span>

因为我们add到缓存区，stage所以我们不管添加add几次也无法在提交到分支后的记录中显示出来，所以我们可以尽可能随时add到缓存区，这样方便我们在有问题的时候可以从缓存中回退，从缓存中回退对应的是黄色圆圈的7我们因为我们当前的工作区是HEAD所以我们回退的时候只要git reset HEAD即可将内容回退到工作区，非常的方便。以上就是工作区和缓存区之间的交互了。暂时还没有到分支，如果我们做好了以上这些步骤，那么我们就可以对记录进行调整与保存了。BTW如果有删除的文件我们用git add .并不能将这个修改提交到缓存至分支上，因为我们已经将这个文件记录进缓存里了，你删了他，但是缓存区的文件并没有感知，所以如果需要删除文件的花我们需要这样git remove [文件名称]和git add .相对应。缓存区的最大的意义也就在于我们将真正的记录前留一手，避免我们在工作的时候没有后悔药吃。

我们现在只是将缓存区回退了，也就是说我们现在没有要提交到分支的内容了，但是我们的文件缺还是并没有回到我们加入缓存区的那个版本，通过git status我们发现系统现在还只是提示我们还有内容没有git add需要将修改提交到缓存区。我们现在时在做恢复，我们的缓存区已经到了上一个状态，我们想让工作区里的内容回到缓存区的状态的话我们可以用git checkout [需要将修改记录回退的文件]这样我们就可以将工作区回到上一个版本了。

f.git的提交

git缓存区的任务完成了，我们就可以对git进行提交了，首先我们先要确认需要提交的分支，我们可以用git branch来对当下正在编辑的分支进行确认，git branch语句不仅列出了所有正在使用的分支，在当下编辑的分支前会有一个<span class="keyword">*</span>号的。默认我们应该有一个master的分支，那我们就先在这个分支上提交好了。但是实际的工作中我们应该有一个git dev的分支，所有没有问题的提交都提交到这个分支里，master作为发布版本，不能有一点的动作只有等到git dev版本的分支稳定后才将git的dev分支合并到master上去。提交到分支的语句是git commmit -m &amp;quot;注释&amp;quot;。这样我们就成功提交到当前分支了，我们可以用git log来观看我们的工作流。git log 有很多参数我们可以用git log pretty=oneline的方式将其以更舒服的方式观看，其中log里显示了很多由十六进制生成的git的提交id我们可以通过这些id来对git进行恢复操作。git loa有很多参数，我们可以用假名的方式
</code></pre><pre style="padding: 9.5px; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 13px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; margin-top: 0px; margin-bottom: 10px; line-height: 20px; word-break: break-all; word-wrap: break-word; white-space: pre-wrap; border: 1px solid rgba(0, 0, 0, 0.14902); background-color: rgb(245, 245, 245);">
`git config --global alias.lg &quot;log --color --graph --pretty=format:&#39;%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset&#39; --abbrev-commit&quot;`</pre>

<pre><code>这是我见过的最好的展现git的记录的方式，在以后我们只要git lg便能展现出git的各个分支提交合并的关联情况。

![](http://www.liaoxuefeng.com/files/attachments/<span class="number">00138492662</span>982594cbd<span class="number">1a942114472</span>aeeb<span class="number">5f0a502</span>faed1000/0)

g.git的恢复

要像从git的分支中回退到工作区中比较麻烦。我们知道当前工作区是HEAD那么回退到上一个版本即是git reset --hard HEAD^ 其中^是代表上一个版本的意思，其中注意的是windows的情况下^不能正常运作，要添加git reset --hard &amp;quot<span class="comment">;HEAD^&amp;quot;来恢复即可。如果想恢复到其中某一个版本只要git reset --hard &amp;quot;版本号即可以回到任意的版本号&amp;quot;。</span>

h.git的分支

git如果只有一个分支就没什么意义了，同样的如果写代码只在一个里面开发的话那么不仅恢复起来比较痛苦，而且对于功能的区分不是很明显。就像游戏中的任务槽一样，如果游戏都是不断的在覆盖自己当前的记录就没什么一样，我想重新体验其中的某一关都是不行的（貌似现在的游戏都这样）git就完全不一样了。我们只要将每一个关卡（功能）开一个分支即可，而且开的新分支可以完全在之前的分支基础上建立。比如我现在要在master的基础上开一个dev的分支那么我只要用语句git checkout -b dev即可 git cehckout 分支名是转到相应分支的意思-b就是顺便创建的意思。当我开发完成git的这个分支以后我将这个功能合并到master即可。

igit的分支合并

git创建并转到相应的分支上的时候我们需要将此git所在分支的事情做完才可以。也就是说当前git工作区的内容全部提交到分支上，要么我们git的内容在缓存区里，并且缓存区被保存。当我们切换分支无外乎就是开发新的功能了。开发完成后就可以合并到需要合并的主分支上去。用git merge 分支名 的方式进行合并，当合并完成后我们再git branch -d 分支名(删除分支)一个完整的合并功能操作就完成了，但是这种合并仿佛我们没用到分支的感觉，如下图

1。![](http://www.liaoxuefeng.com/files/attachments/<span class="number">00138490879</span><span class="number">37492135</span>fbf4bbd24dfcbc<span class="number">18349a8a59</span>d<span class="number">36d000/0</span>)

2.![](http://www.liaoxuefeng.com/files/attachments/<span class="number">00138490882</span><span class="number">35627813</span>efe<span class="number">7649b4f00</span><span class="number">8900e5365</span>bb<span class="number">72323000/0</span>)

3.![](http://www.liaoxuefeng.com/files/attachments/<span class="number">00138490883</span><span class="number">510324231a83</span>7e5d4aee<span class="number">844d3e46</span>92ba<span class="number">50f5000/0</span>)

4.![](http://www.liaoxuefeng.com/files/attachments/<span class="number">00138490886</span>7187c83ca970bf0f46efa19badad<span class="number">99c40235000</span>/0)

如果是自己的流程没什么问题，而且只要自己能够保证好之间的关系就好，但是有的时候有的老板要求很残酷的，像我以前的老板要求看到合并的流程其实是非常脑残的。那么我们可以用git merge --no-ff 分支名 -m &amp;quot<span class="comment">;注释&amp;quot;的方式记录一个合并的操作状态</span>

jgit的tag及发布

当我们有一个稳定的版本面世的时候我们可以将其作为一个版本的发布比如git tag v1.0这样我们就相当于给master的这个当前的状态一个可以发布的标签。当然我们也可以用git tag -d v1.0来删除这个版本，同样可以用git tag v1.0 版本名 来给当前分支的一个版本一个tag。默认的git tag是将所有的git的tag列出来。

jgit的远程初始化

git的远程可以选择很多不错的git库存放，可以自己搭建linux一般水平如我可以通过github来进行代码的存放。只要在github上注册一个账号并点击右上角的加号，点击create repository即可以添加一个库。添加好了库，可以将远程的库clone到本地，作为远程库的一个副本。通过git clone 远程库名称。远程库名称有两种一种是https协议的和git@github.com/用户名/git库名.git后一种速度明显优于前面。从远程clone过来的库是将远程的库clone过来，如果远程已经有不错的开源库这样是非常方便的，如果你像将本地的库推送到远端的空库中可以通过git remote add origin 远程库名可以将库的名称添加到本地对应的地方，然后初次的时候通过git push -u origin master即可.同样本地的库分支推到远程可以用git push origin branchname，本地的tag推送到远程可以用git push origin tagname。能推送的首要是确保你有推送权限，推送的权限一般会给本地的机器一个ssh-keygen。通过ssh-keygen -t rsa -C &amp;quot<span class="comment">;username@github.com&amp;quot;可以通过此种方式注册（windows上必须用powerpc等gitshell才可以，直接将git加入环境变量是不可取的）然后按照提示提交key的存储位置和密码。如果默认存储位置和密码为空一路回车就可以了，然后找到相应的id_rsa.pub（我的默认生成在mac里是User/username/.ssh/id_rsa.pub）之类的公开类复制好，黏贴到github的setting里的deploy key里为这个可以添加一个名字即可。</span>

但是这个很坑爹的是，如果你已经给一个库一个key以后这个key就不能再给其他repo用了，添加的时候就会提示，如果在一台电脑上同时操作两个库的话，push的时候就会提示两个库的key有冲突或者没有权限提交...种种，所以记得一台电脑当下智能推送一个有key的repo如果有其他repo需要的话，先把用过这个库的repo的key删掉，然后用在当下编辑的库中。具体觉得不应该如此，所以会进一步做一下研究的。

kgit的远程推送和获取最新

如果是多人合作那么务必记得要git pull一下之后解决conflict并commit到分支后再push。git pull即是讲所有的文件从远程更新到本地。

而且git里有一个wiki也有一个git的版本，觉得这是一个很好的记录学习状态的方式。

l对其他开源库的操作。

如果需要对其他库操作，那么可以点击右上角的fork标志

fork后到自己的名下生成一个类似的库的内容，这时候你可以在你自己的库里随意的进行更新推送，然后觉得有必要将自己的代码融入进开源的世界可以发一个pull request来请求作者把自己的修改融入进去。

好久没写blog说实话感觉自己的blog写的很凌乱，主要是内容太多了，自己学习的话非常容易，总结确实不是一个容易的事情，但是不总结的话很容易忘掉而且前进也有瓶颈，一般的学习看视频我都懒得看感觉太浪费时间，写blog是一个更加残酷的现实。希望以后可以提升自己写blog的经验，同时发信息要写一个blog也不是那么容易的事情，我会继续努力花时间改善的，我想以后的内容和经验可以分章节写在不同主题里面。希望大家提出宝贵的意见

我这次的git学习的道路感谢这篇blog对我的启发。

[http://www.liaoxuefeng.com/wiki/<span class="number">00137395163</span><span class="number">05929606</span>dd<span class="number">18361248578</span>c<span class="number">67b8067c8</span>c<span class="number">017b000</span>](http://www.liaoxuefeng.com/wiki/<span class="number">00137395163</span><span class="number">05929606</span>dd<span class="number">18361248578</span>c<span class="number">67b8067c8</span>c<span class="number">017b000</span>)
</code></pre>]]></content>
    <summary type="html">
    <![CDATA[<p>git是一款非常独到的版本控制管理器,通过git可以方便的进行版本的管理，与svn及tfs的最大的不同是可以将各种版本的切换放在本地进行控制。是一款非常好用的方式，只在需要的时候才与远程进行同步。之前用svn和tfs也没发生多大的问题，但是其实问题很多，比如如果网断了就不能]]>
    </summary>
    
      <category term="git" scheme="http://www.soledad.com.cn/categories/git/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[android webview远程调试]]></title>
    <link href="http://www.soledad.com.cn/2014/08/18/android-webview-e8-bf-9c-e7-a8-8b-e8-b0-83-e8-af-95/"/>
    <id>http://www.soledad.com.cn/2014/08/18/android-webview-e8-bf-9c-e7-a8-8b-e8-b0-83-e8-af-95/</id>
    <published>2014-08-18T18:12:31.000Z</published>
    <updated>2015-10-17T04:04:42.112Z</updated>
    <content type="html"><![CDATA[<p>Android&nbsp;webview远程调试之前只是有耳闻过，一直没有实操过。因为和开发ios一样，门槛比较高。</p>
<pre><code>但毕竟是屌丝领军所以还好，唯一的条件是需要有一个android4.0版本以上配置的机器（也还好现在很多厂商已经可以配上了）。

还好当时买了个nesus10而且对于生活已经渐渐的离不开了。这货可以直接升级到nesus4.4...

&amp;nbsp<span class="comment">;</span>

1.好了废话不多说，首先一切的开始源于APP是否加了可以让webview能够调试的代码

代码如下

要在apk的manifest里面加上这么一句

在android开发的时候配置文件manifest中需要加一段 &amp;nbsp<span class="comment">;详见https://developer.chrome.com/extensions/debugger&amp;nbsp;</span>

{

&amp;nbsp<span class="comment">;&amp;nbsp; &amp;nbsp;&amp;quot;name&amp;quot;: &amp;quot;My extension&amp;quot;,</span>

&amp;nbsp<span class="comment">;&amp;nbsp; &amp;nbsp;...</span>

&amp;nbsp<span class="comment">;&amp;nbsp; &amp;nbsp;&amp;quot;permissions&amp;quot;: [</span>

&amp;nbsp<span class="comment">;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;quot;debugger&amp;quot;,</span>

&amp;nbsp<span class="comment">;&amp;nbsp; &amp;nbsp;],</span>

&amp;nbsp<span class="comment">;&amp;nbsp; &amp;nbsp;...</span>

}

然后还要在Main文件里加上这个句
</code></pre><pre class="prettyprint" style="padding: 0.99em; margin-top: 2em; margin-bottom: 2em; box-sizing: border-box; font-family: 'Source Code Pro', sans-serif; font-size: 0.95em; word-wrap: break-word; box-shadow: rgba(0, 0, 0, 0.14902) 0px 2px 4px, rgba(0, 0, 0, 0.14902) 0px 0px 3px; position: relative; overflow-x: auto; line-height: 1.8em; color: rgb(0, 136, 0); background-color: rgb(247, 247, 247);">
<span class="kwd" style="padding: 0px; margin: 0px; box-sizing: border-box; color: rgb(0, 0, 136);">if</span><span class="pun" style="padding: 0px; margin: 0px; box-sizing: border-box; color: rgb(102, 102, 0);">(</span><span class="typ" style="padding: 0px; margin: 0px; box-sizing: border-box; color: rgb(102, 0, 102);">Build</span><span class="pun" style="padding: 0px; margin: 0px; box-sizing: border-box; color: rgb(102, 102, 0);">.</span><span class="pln" style="padding: 0px; margin: 0px; box-sizing: border-box; color: rgb(0, 0, 0);">VERSION</span><span class="pun" style="padding: 0px; margin: 0px; box-sizing: border-box; color: rgb(102, 102, 0);">.</span><span class="pln" style="padding: 0px; margin: 0px; box-sizing: border-box; color: rgb(0, 0, 0);">SDK_INT </span><span class="pun" style="padding: 0px; margin: 0px; box-sizing: border-box; color: rgb(102, 102, 0);">&gt;=</span><span class="pln" style="padding: 0px; margin: 0px; box-sizing: border-box; color: rgb(0, 0, 0);"> </span><span class="typ" style="padding: 0px; margin: 0px; box-sizing: border-box; color: rgb(102, 0, 102);">Build</span><span class="pun" style="padding: 0px; margin: 0px; box-sizing: border-box; color: rgb(102, 102, 0);">.</span><span class="pln" style="padding: 0px; margin: 0px; box-sizing: border-box; color: rgb(0, 0, 0);">VERSION_CODES</span><span class="pun" style="padding: 0px; margin: 0px; box-sizing: border-box; color: rgb(102, 102, 0);">.</span><span class="pln" style="padding: 0px; margin: 0px; box-sizing: border-box; color: rgb(0, 0, 0);">KITKAT</span><span class="pun" style="padding: 0px; margin: 0px; box-sizing: border-box; color: rgb(102, 102, 0);">)</span><span class="pln" style="padding: 0px; margin: 0px; box-sizing: border-box; color: rgb(0, 0, 0);"> </span><span class="pun" style="padding: 0px; margin: 0px; box-sizing: border-box; color: rgb(102, 102, 0);">{</span><span class="pln" style="padding: 0px; margin: 0px; box-sizing: border-box; color: rgb(0, 0, 0);">
    </span><span class="kwd" style="padding: 0px; margin: 0px; box-sizing: border-box; color: rgb(0, 0, 136);">if</span><span class="pln" style="padding: 0px; margin: 0px; box-sizing: border-box; color: rgb(0, 0, 0);"> </span><span class="pun" style="padding: 0px; margin: 0px; box-sizing: border-box; color: rgb(102, 102, 0);">(</span><span class="pln" style="padding: 0px; margin: 0px; box-sizing: border-box; color: rgb(0, 0, 0);"> </span><span class="lit" style="padding: 0px; margin: 0px; box-sizing: border-box; color: rgb(0, 102, 102);">0</span><span class="pln" style="padding: 0px; margin: 0px; box-sizing: border-box; color: rgb(0, 0, 0);"> </span><span class="pun" style="padding: 0px; margin: 0px; box-sizing: border-box; color: rgb(102, 102, 0);">!=</span><span class="pln" style="padding: 0px; margin: 0px; box-sizing: border-box; color: rgb(0, 0, 0);"> </span><span class="pun" style="padding: 0px; margin: 0px; box-sizing: border-box; color: rgb(102, 102, 0);">(</span><span class="pln" style="padding: 0px; margin: 0px; box-sizing: border-box; color: rgb(0, 0, 0);"> getApplcationInfo</span><span class="pun" style="padding: 0px; margin: 0px; box-sizing: border-box; color: rgb(102, 102, 0);">().</span><span class="pln" style="padding: 0px; margin: 0px; box-sizing: border-box; color: rgb(0, 0, 0);">flags </span><span class="pun" style="padding: 0px; margin: 0px; box-sizing: border-box; color: rgb(102, 102, 0);">&amp;=</span><span class="pln" style="padding: 0px; margin: 0px; box-sizing: border-box; color: rgb(0, 0, 0);"> </span><span class="typ" style="padding: 0px; margin: 0px; box-sizing: border-box; color: rgb(102, 0, 102);">ApplicationInfo</span><span class="pun" style="padding: 0px; margin: 0px; box-sizing: border-box; color: rgb(102, 102, 0);">.</span><span class="pln" style="padding: 0px; margin: 0px; box-sizing: border-box; color: rgb(0, 0, 0);">FLAG_DEBUGGABLE </span><span class="pun" style="padding: 0px; margin: 0px; box-sizing: border-box; color: rgb(102, 102, 0);">)</span><span class="pln" style="padding: 0px; margin: 0px; box-sizing: border-box; color: rgb(0, 0, 0);"> </span><span class="pun" style="padding: 0px; margin: 0px; box-sizing: border-box; color: rgb(102, 102, 0);">)</span><span class="pln" style="padding: 0px; margin: 0px; box-sizing: border-box; color: rgb(0, 0, 0);"> </span><span class="pun" style="padding: 0px; margin: 0px; box-sizing: border-box; color: rgb(102, 102, 0);">{</span><span class="pln" style="padding: 0px; margin: 0px; box-sizing: border-box; color: rgb(0, 0, 0);">
        </span><span class="typ" style="padding: 0px; margin: 0px; box-sizing: border-box; color: rgb(102, 0, 102);">WebView</span><span class="pun" style="padding: 0px; margin: 0px; box-sizing: border-box; color: rgb(102, 102, 0);">.</span><span class="pln" style="padding: 0px; margin: 0px; box-sizing: border-box; color: rgb(0, 0, 0);">setWebContentsDebuggingEnabled</span><span class="pun" style="padding: 0px; margin: 0px; box-sizing: border-box; color: rgb(102, 102, 0);">(</span><span class="kwd" style="padding: 0px; margin: 0px; box-sizing: border-box; color: rgb(0, 0, 136);">true</span><span class="pun" style="padding: 0px; margin: 0px; box-sizing: border-box; color: rgb(102, 102, 0);">);</span><span class="pln" style="padding: 0px; margin: 0px; box-sizing: border-box; color: rgb(0, 0, 0);">
    </span><span class="pun" style="padding: 0px; margin: 0px; box-sizing: border-box; color: rgb(102, 102, 0);">}</span><span class="pln" style="padding: 0px; margin: 0px; box-sizing: border-box; color: rgb(0, 0, 0);">
</span><span class="pun" style="padding: 0px; margin: 0px; box-sizing: border-box; color: rgb(102, 102, 0);">}</span></pre>

<pre><code>详见：https:<span class="comment">//developer.chrome.com/devtools/docs/remote-debugging#debugging-webviews</span>

<span class="number">2.</span>插上设备的USB后进行OEM的安装

详见http:<span class="comment">//developer.android.com/tools/extras/oem-usb.html</span>

不过这里有个地方就是如果是三星或者google得下一份驱动到本地然后将自动安装的驱动改为本地的驱动

我的nesus10也不例外。当然更淫荡的是除了原生的驱动也许还有interface之类的驱动也得完美无缺的装上。

安装方式【以win7为例】

<span class="number">1.</span>链接设备

<span class="number">2.</span>点击我的电脑右键选择管理

![](http:<span class="comment">//t3.qpic.cn/mblogpic/c44eaa126aea0ec3c4ee/2000)</span>

<span class="number">3.</span>选择设备管理器

<span class="number">4.</span>找到相应的设备后

<span class="number">5.</span>点击右键选择更新驱动软件

![](http:<span class="comment">//t3.qpic.cn/mblogpic/b86e12a8d73661b07fe8/2000)</span>

<span class="number">6.</span>选择浏览计算机以查找驱动程序软件

![](http:<span class="comment">//t3.qpic.cn/mblogpic/0f03ed7ea8b5e4a533c2/2000)</span>

&amp;nbsp; （根据这里面的说明安装http:<span class="comment">//developer.android.com/tools/extras/oem-usb.html）我由于是googleNesus系列就用了http://developer.android.com/sdk/win-usb.html</span>

<span class="number">7.</span>点击下一步安装驱动

这时候打开就可以看到了

点击inspect进入调试模式（这里如果第一次进的话，不白屏的话，那我就跪了）

&amp;nbsp;

这个白屏的问题花了我一下午时间啊。

找了一下原因原来是有两个变量undefined[
</code></pre><pre class="default prettyprint prettyprinted" style="margin-top: 0px; margin-bottom: 10px; padding: 5px; border: 0px; font-size: 14px; vertical-align: baseline; font-family: Consolas, Menlo, Monaco, 'Lucida Console', 'Liberation Mono', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', 'Courier New', monospace, serif; overflow: auto; width: auto; max-height: 600px; word-wrap: normal; color: rgb(0, 0, 0); line-height: 17.804800033569336px; background: rgb(238, 238, 238);">
`<span class="str" style="margin: 0px; padding: 0px; border: 0px; vertical-align: baseline; color: rgb(128, 0, 0); background: transparent;">Uncaught ReferenceError: InspectorFrontendAPI is not defined</span>`</pre>

<pre><code>&amp;nbsp<span class="comment">;</span>
</code></pre><pre class="default prettyprint prettyprinted" style="margin-top: 0px; margin-bottom: 10px; padding: 5px; border: 0px; font-size: 14px; vertical-align: baseline; font-family: Consolas, Menlo, Monaco, 'Lucida Console', 'Liberation Mono', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', 'Courier New', monospace, serif; overflow: auto; width: auto; max-height: 600px; word-wrap: normal; color: rgb(0, 0, 0); line-height: 17.804800033569336px; background: rgb(238, 238, 238);">
`<span class="str" style="margin: 0px; padding: 0px; border: 0px; vertical-align: baseline; color: rgb(128, 0, 0); background: transparent;">Uncaught ReferenceError: WebInspector is not defined</span>`</pre>

<pre><code>]

找了半天确实stackoverflow上有一篇一样的问题，但是没人回答...

<span class="symbol">http:</span>/<span class="regexp">/stackoverflow.com/questions</span><span class="regexp">/21801324/inspectorfrontendapi</span>-is-not-defined-during-chrome-remote-debugging

又用fiddler抓包工具发现...尼玛中国太给力了，不然技术员怎么能锻炼出解决问题的能力呢，是将里面的链接给强了，而且这个强的不是一般的厉害。

我用了三种代理的方式翻墙，facebook都看腻了还是访问不到,最后只好全局设置vpn（推荐greenvpn免费）...最终解决了，不过还好这个访问的是配置文件，也就是说执行完一次如果保存成功，将不再继续访问了。

好了，大功告成，慢慢打断点调试吧.

![](<span class="symbol">http:</span>/<span class="regexp">/t3.qpic.cn/mblogpic</span><span class="regexp">/60213ed62707d918a722/</span><span class="number">460</span>)

参考文章

<span class="symbol">https:</span>/<span class="regexp">/developer.chrome.com/devtools</span><span class="regexp">/docs/remote</span>-debugging

<span class="symbol">https:</span>/<span class="regexp">/developer.chrome.com/devtools</span><span class="regexp">/docs/debugger</span>-protocol

<span class="symbol">https:</span>/<span class="regexp">/developer.chrome.com/extensions</span><span class="regexp">/debugger

http:/</span><span class="regexp">/developer.android.com/tools</span><span class="regexp">/extras/oem</span>-usb.html

<span class="symbol">http:</span>/<span class="regexp">/developer.android.com/tools</span><span class="regexp">/device.html

&amp;nbsp;

&amp;nbsp;</span>
</code></pre>]]></content>
    <summary type="html">
    <![CDATA[<p>Android&nbsp;webview远程调试之前只是有耳闻过，一直没有实操过。因为和开发ios一样，门槛比较高。</p>
<pre><code>但毕竟是屌丝领军所以还好，唯一的条件是需要有一个android4.0版本以上配置的机器（也还好现在很多厂商已经可以配上了）。
]]>
    </summary>
    
      <category term="未分类" scheme="http://www.soledad.com.cn/categories/%E6%9C%AA%E5%88%86%E7%B1%BB/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[版本号的语义化]]></title>
    <link href="http://www.soledad.com.cn/2014/08/18/e7-89-88-e6-9c-ac-e5-8f-b7-e7-9a-84-e8-af-ad-e4-b9-89-e5-8c-96/"/>
    <id>http://www.soledad.com.cn/2014/08/18/e7-89-88-e6-9c-ac-e5-8f-b7-e7-9a-84-e8-af-ad-e4-b9-89-e5-8c-96/</id>
    <published>2014-08-18T09:42:05.000Z</published>
    <updated>2015-10-17T04:04:40.520Z</updated>
    <content type="html"><![CDATA[<p>最近生活有些颓废，大概是比较乱没有一个方向，这之间和客户的纠缠让我感到神情疲惫，尤其是精力分散了好多。</p>
<pre><code>而且老大还邀请一起写书，朋友创业支持，老婆也需要陪，我身上的肉也要我锻炼，衣服也要洗，每天各种纠缠的小细节，让我需要沉淀一下。

还好最近工作没什么内容，不然要死了。工作没内容也是非常的发慌的。

话说我真的对什么客户的来说非常的给脸色，见到脾气这么好的顾客还真的是非常的运气。

近期在学nodejs。因为考虑到，Nodejs这个东西<span class="number">09</span>年就出来了

<span class="number">11</span>年引入国内后，记得很清晰，<span class="number">13</span>年反反复复几次研究这个东西，用express写了两回blog依然没有把他拿下。

现在感觉NODE作为中间层对前端的工作有非常大而且积极的影响，所以感觉这次如果再不拿下就老了，况且工作中已经各种融合了NODEjs

所以这次一定要学会，尤其是BIGPIPE技术，淘宝已经做到了，一定要坚持下去，所以我要在此开辟一个专门学习Nodejs的小专栏。

而且是不同的细节方面都要全力的进行。

今天研究了解到的是之前一直没有关注的版本号，版本号这个东西，之前只是一直在用，只是觉得<span class="number">2.0</span><span class="number">.0</span>一定大于<span class="number">1.0</span><span class="number">.0</span>哪个字母代表什么意思没有深究。

今天看了这篇文章http:<span class="comment">//semver.org/lang/zh-CN/恍然大悟。</span>

三个版本号都分别代表的是
</code></pre><ol>
<li>主版本号：当你做了不兼容的API 修改，</li>
<li>次版本号：当你做了向下兼容的功能性新增，</li>
<li><p>修订号：当你做了向下兼容的问题修正。</p>
<p>所以</p>
<p>以下关键词MUST、MUST NOT、REQUIRED、SHALL、SHALL NOT、SHOULD、SHOULD NOT、 RECOMMENDED、MAY、OPTIONAL 依照RFC 2119 的叙述解读。（译注：为了保持语句顺畅， 以下文件遇到的关键词将依照整句语义进行翻译，在此先不进行个别翻译。）</p>
<p>使用语义化版本控制的软件&ldquo;必须MUST&rdquo;定义公共API。该API可以在代码中被定义或出现于严谨的文件内。无论何种形式都应该力求精确且完整。</p>
<p>标准的版本号&ldquo;必须MUST&rdquo;采用XYZ的格式，​​ 其中X、Y和Z为非负的整数，且&ldquo;禁止MUST NOT&rdquo;在数字前方补零。X是主版本号、Y是次版本号、而Z为修订号。每个元素&ldquo;必须MUST&rdquo;以数值来递增。例如：1.9.1 -&gt; 1.10.0 -&gt; 1.11.0。</p>
<p>标记版本号的软件发行后，&ldquo;禁止MUST NOT&rdquo;改变该版本软件的内容。任何修改都&ldquo;必须MUST&rdquo;以新版本发行。</p>
<p>主版本号为零（0.yz）的软件处于开发初始阶段，一切都可能随时被改变。这样的公共API 不应该被视为稳定版。</p>
<p>1.0.0 的版本号用于界定公共API 的形成。这一版本之后所有的版本号更新都基于公共API 及其修改内容。</p>
<p>修订号Z（xyZ | x &gt; 0）&ldquo;必须MUST&rdquo;在只做了向下兼容的修正时才递增。这里的修正指的是针对不正确结果而进行的内部修改。</p>
<p>次版本号Y（xYz | x &gt; 0）&ldquo;必须MUST&rdquo;在有向下兼容的新功能出现时递增。在任何公共API的功能被标记为弃用时也&ldquo;必须MUST&rdquo;递增。也&ldquo;可以MAY&rdquo;在内部程序有大量新功能或改进被加入时递增，其中&ldquo;可以MAY&rdquo;包括修订级别的改变。每当次版本号递增时，修订号&ldquo;必须MUST&rdquo;归零。</p>
<p>主版本号X（Xyz | X &gt; 0）&ldquo;必须MUST&rdquo;在有任何不兼容的修改被加入公共API时递增。其中&ldquo;可以MAY&rdquo;包括次版本号及修订级别的改变。每当主版本号递增时，次版本号和修订号&ldquo;必须MUST&rdquo;归零。</p>
<p>先行版本号&ldquo;可以MAY&rdquo;被标注在修订版之后，先加上一个连接号再加上一连串以句点分隔的标识符号来修饰。标识符号&ldquo;必须MUST&rdquo;由ASCII码的英数字和连接号[0-9A-Za-z-]组成，且&ldquo;禁止MUST NOT&rdquo;留白。数字型的标识符号&ldquo;禁止MUST NOT&rdquo;在前方补零。先行版的优先级低于相关联的标准版本。被标上先行版本号则表示这个版本并非稳定而且可能无法达到兼容的需求。范例：1.0​​.0-alpha、1.0.0-alpha.1、 1.0.0-0.3.7、1.0.0-x.7.z.92。</p>
<p>版本编译信息&ldquo;可以MAY&rdquo;被标注在修订版或先行版本号之后，先加上一个加号再加上一连串以句点分隔的标识符号来修饰。标识符号&ldquo;必须MUST&rdquo;由ASCII的英数字和连接号[0-9A-Za-z-]组成，且&ldquo;禁止MUST NOT&rdquo;留白。当判断版本的优先层级时，版本编译信息&ldquo;可SHOULD&rdquo;被忽略。因此当两个版本只有在版本编译信息有差别时，属于相同的优先层级。范例：1.0.0-alpha+001、1.0.0+20130313144700、 1.0.0-beta+exp.sha.5114f85。</p>
<p>版本的优先层级指的是不同版本在排序时如何比较。判断优先层级时，&ldquo;必须MUST&rdquo;把版本依序拆分为主版本号、次版本号、修订号及先行版本号后进行比较（版本编译信息不在这份比较的列表中）。由左到右依序比较每个标识符号，第一个差异值用来决定优先层级：主版本号、次版本号及修订号以数值比较，例如1.0.0 &lt; 2.0.0 &lt; 2.1.0 &lt; 2.1.1。当主版本号、次版本号及修订号都相同时，改以优先层级比较低的先行版本号决定。例如：1.0.0-alpha &lt; 1.0.0。有相同主版本号、次版本号及修订号的两个先行版本号，其优先层级&ldquo;必须MUST&rdquo;透过由左到右的每个被句点分隔的标识符号来比较，直到找到一个差异值后决定：只有数字的标识符号以数值高低比较，有字母或连接号时则逐字以ASCII的排序来比较。数字的标识符号比非数字的标识符号优先层级低。若开头的标识符号都相同时，栏 ​​位比较多的先行版本号优先层级比较高。范例：1.0.0-alpha &lt; 1.0.0-alpha.1 &lt; 1.0.0-alpha.beta &lt; 1.0.0-beta &lt; 1.0.0-beta.2 &lt; 1.0.0-beta.11 &lt; 1.0.0- rc.1 &lt; 1.0.0。</p>
<p>一般来说项目的开始时是0.0.1启动的，然后根据需要可以拓展分支用MAY的方式在标准版本号之后建立-alpha或者alpha.beta进行开发。开发后融入主版本号中。主版本号在有稳定的版本时生成.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<p>最近生活有些颓废，大概是比较乱没有一个方向，这之间和客户的纠缠让我感到神情疲惫，尤其是精力分散了好多。</p>
<pre><code>而且老大还邀请一起写书，朋友创业支持，老婆也需要陪，我身上的肉也要我锻炼，衣服也要洗，每天各种纠缠的小细节，让我需要沉淀一下。

还好最近工]]>
    </summary>
    
      <category term="未分类" scheme="http://www.soledad.com.cn/categories/%E6%9C%AA%E5%88%86%E7%B1%BB/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[MOOC 在线课堂【有空也得学习一下】]]></title>
    <link href="http://www.soledad.com.cn/2014/07/18/mooc-e5-9c-a8-e7-ba-bf-e8-af-be-e5-a0-82-e3-80-90-e6-9c-89-e7-a9-ba-e4-b9-9f-e5-be-97-e5-ad-a6-e4-b9-a0-e4-b8-80-e4-b8-8b-e3-80-91/"/>
    <id>http://www.soledad.com.cn/2014/07/18/mooc-e5-9c-a8-e7-ba-bf-e8-af-be-e5-a0-82-e3-80-90-e6-9c-89-e7-a9-ba-e4-b9-9f-e5-be-97-e5-ad-a6-e4-b9-a0-e4-b8-80-e4-b8-8b-e3-80-91/</id>
    <published>2014-07-18T14:15:45.000Z</published>
    <updated>2015-10-17T04:04:41.588Z</updated>
    <content type="html"><![CDATA[<p>##<br>    概念介绍</p>
<pre><code>MOOC（Massive Open Online Courses）是大规模在线开放课程，简单来说就是把各学校的课程放到互联网上，对所有人开放共享。

MOOC 是一个理念，就如 Open Source 一样，与之对应的是传统学校授课方式。MOOC 的理念雏形，历史可追溯到 <span class="number">1890</span> 年代。MOOC 正式提出是在 <span class="number">2008</span> 年，之后特别是 <span class="number">2012</span> 年发展迅猛。

目前提供 MOOC 课程的优秀网站有：
</code></pre><ol>
<li><a href="https://www.coursera.org/" target="_blank" rel="external">https://www.coursera.org/</a>&nbsp;– 拥有大量合作机构、课程最多</li>
<li><a href="https://www.udacity.com/" target="_blank" rel="external">https://www.udacity.com/</a>&nbsp;– 有不少计算机类课程</li>
<li><a href="https://www.edx.org/" target="_blank" rel="external">https://www.edx.org/</a>&nbsp;– 哈佛、麻省理工、伯克利等大学在这里，拥有著名的 CS50 等课程</li>
<li><p><a href="https://www.khanacademy.org/" target="_blank" rel="external">https://www.khanacademy.org/</a>&nbsp;– 可汗学院，拥有很多理工科课程</p>
<p>Coursera、Udacity、edX、Khan 与哈佛、斯坦福、普林斯顿等著名高校合作，推出了一系列高质量课程。以 Coursera 为例，目前合作机构超过 100 个，包括北京大学、 台湾国立大学、东京大学等，总课程有 500 多个，内含不少中文课程。</p>
<p>国内也有跟进者：</p>
</li>
<li><p><a href="http://xuetangx.com/" target="_blank" rel="external">http://xuetangx.com/</a>&nbsp;– 清华大学基于 OpenEdX 搭建的平台</p>
</li>
<li><a href="http://mooc.guokr.com/" target="_blank" rel="external">http://mooc.guokr.com/</a>&nbsp;– 果壳出品的 MOOC 学院，以信息聚集为主</li>
<li><p><a href="http://open.163.com/" target="_blank" rel="external">http://open.163.com/</a>&nbsp;– 网易公开课</p>
<p>英国、德国、澳大利亚等国也涌现了不少优秀 MOOC 网站，可参考：&nbsp;<a href="http://www.36kr.com/p/208630.html" target="_blank" rel="external">http://www.36kr.com/p/208630.html</a></p>
</li>
</ol>
<p>##<br>    课程特点</p>
<pre><code>在国内，很多人可能通过网易公开课欣赏过哈佛等名校的课程。到目前为止，网易公开课的形式依旧是视频，缺少其他辅助。Coursera 等网站在课程设计上非常花心思，已经逐步形成了真正的在线课程：
</code></pre><ol>
<li><strong>课程规划</strong>。有开课周期，就像在大学选修一样，有些课程错过了，就只能等下一期。</li>
<li><strong>资料齐全</strong>。提供授课视频、字幕、授课资料、参考书籍等，大部分可下载离线反复学习，非常方便。</li>
<li><strong>学习过程</strong>。资料是逐步放出来的，看完视频后有小考，每周有作业，就像在大学一样。</li>
<li><strong>学习社区</strong>。拥有真正的社区，热门的课程经常有几千人参与。教授，牛人、全球各路大虾云集。</li>
<li><p><strong>证书激励</strong>。有期末考试，通过的还会颁发证书。据说这个证书，Google 等企业会认。</p>
<p>MOOC 越来越像真实的课堂，汲取了大学课程设计的很多优点，同时利用互联网，向全世界开放。</p>
</li>
</ol>
<p>##<br>    盈利模式</p>
<pre><code>截至 <span class="number">2013</span> 年底，Coursera B 轮融资已达 <span class="number">6300</span> 万美元。站在使用者的角度来看，MOOC 网站的盈利模式至少有以下几项：
</code></pre><ol>
<li><strong>收费课程</strong>。目前已有不少收费课程，几十美刀一门课。与线下大学相比，这是白菜价。只要能学有所得，用户就很愿意付这笔钱。</li>
<li><strong>猎头服务</strong>。与 Google、Facebook 等合作，直接将课程学习优异者推送给企业。现在已经有学生在简历上自主写上在线课程的学习分数。</li>
<li><p><strong>职业培训</strong>。比如 Udacity 将重心放在了科技行业的职前培训。在国内，做好的话或许能抢下北大青鸟不少份额。去做职业培训的讲师，或许这也是技术人员的一条不错的创业之路。</p>
<p>整个 MOOC 行业，2012 年全球出现了 60 多家公司。Learn Capital 合伙人 Rob Hutter 预测，<strong>全球教育市场的规模是 4.6 万亿美元，目前已有公司吃掉的差不多只有 500 亿美元，只是冰山一角，一切才刚刚开始。</strong></p>
</li>
</ol>
<p>##<br>    最后</p>
<pre><code>古人说「活到老、学到老」，MOOC 让学习变得更便捷、美好。在知乎上看到过一句话：
</code></pre><blockquote>
<p><strong>「在这个互联网时代，能限制住学习的只有你的求知欲。」</strong></p>
</blockquote>
<pre><code>作为前端，还想起一件事，jQuery 作者 John Resig 从 Mozilla 辞职后，投身去了教育领域。他在的地方，就是大名鼎鼎的可汗学院（Khan Academy）。
</code></pre><p>##<br>    参考资料</p>
<ul>
<li><a href="http://en.wikipedia.org/wiki/Massive_open_online_course" target="_blank" rel="external">http://en.wikipedia.org/wiki/Massive_open_online_course</a>&nbsp;– MOOC 的前世今生</li>
<li><a href="http://www.36kr.com/search?q=Coursera" target="_blank" rel="external">http://www.36kr.com/search?q=Coursera</a>&nbsp;– Coursera 那点事</li>
<li><p><a href="http://www.zhihu.com/topic/19793302/top-answers" target="_blank" rel="external">http://www.zhihu.com/topic/19793302/top-answers</a>&nbsp;– 这里能找到大量优秀课程推荐</p>
<p>PS：这个春节才关注 MOOC，跟着 Philip Zelikow 教授学&nbsp;<a href="https://class.coursera.org/modernworld-002" target="_blank" rel="external">The Modern World: Global History since 1760</a>，跟进了两周感觉很不错。<strong>欢迎大家一起来挖掘优秀的 MOOC 课程资源，分享让世界更美丽动人。</strong></p>
<p>（完）</p>
</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p>##<br>    概念介绍</p>
<pre><code>MOOC（Massive Open Online Courses）是大规模在线开放课程，简单来说就是把各学校的课程放到互联网上，对所有人开放共享。

MOOC 是一个理念，就如 Open Source 一样，与之对]]>
    </summary>
    
      <category term="未分类" scheme="http://www.soledad.com.cn/categories/%E6%9C%AA%E5%88%86%E7%B1%BB/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[ajax 跨域]]></title>
    <link href="http://www.soledad.com.cn/2014/07/17/ajax-e8-b7-a8-e5-9f-9f/"/>
    <id>http://www.soledad.com.cn/2014/07/17/ajax-e8-b7-a8-e5-9f-9f/</id>
    <published>2014-07-17T16:22:09.000Z</published>
    <updated>2015-10-17T04:04:41.584Z</updated>
    <content type="html"><![CDATA[<p>ajax的跨域通常需要</p>
<pre><code>设置头部信息（需后端设置）

res.header(&amp;quot<span class="comment">;Access-Control-Allow-Origin&amp;quot;, &amp;quot;*&amp;quot;); &amp;nbsp;</span>

&lt;span style="line-height: 1.6em<span class="comment">;"&gt;res.header(&amp;quot;Access-Control-Allow-Headers&amp;quot;, &amp;quot;Origin, X-Requested-With, Content-Type, Accept&amp;quot;); &amp;nbsp;&lt;/span&gt;</span>

&amp;nbsp<span class="comment">; &amp;nbsp; res.header(&amp;quot;Access-Control-Allow-Methods&amp;quot;,&amp;quot;PUT,POST,GET,DELETE,OPTIONS&amp;quot;); &amp;nbsp;</span>

&amp;nbsp<span class="comment">; &amp;nbsp; res.header(&amp;quot;X-Powered-By&amp;quot;,&amp;#39; 3.2.1&amp;#39;) &amp;nbsp;</span>

&amp;nbsp<span class="comment">;</span>

关于response头部的设置具体可以参考以下网址

http://www.w3.org/TR/access-control/#access-control-allow-origin-response-header

https://dvcs.w3.org/hg/cors/raw-file/tip/Overview.html#access-control-allow-origin-response-header

&amp;nbsp<span class="comment">;</span>

当然也有ie和其他get 和post的设置，具体可以如下参考

post 用ajax方式

opt.type = type<span class="comment">;</span>

opt.dataType = &amp;#39<span class="comment">;json&amp;#39;;</span>

opt.crossDomain = true<span class="comment">;</span>

opt.data = data<span class="comment">;</span>

&amp;nbsp<span class="comment">;opt.contentType = &amp;#39;application/json; charset=utf-8&amp;#39;;</span>

&amp;nbsp<span class="comment">;</span>

get 用ajax方式

opt.type = &amp;#39<span class="comment">;GET&amp;#39;;</span>

opt.dataType = &amp;#39<span class="comment">;jsonp&amp;#39;;</span>

opt.crossDomain = true<span class="comment">;</span>

&amp;nbsp<span class="comment">;</span>

ie8中用ajax方式 具体可参考http://msdn.microsoft.com/zh-cn/library/cc288060(VS.85).aspx

var xdr = new XDomainRequest()<span class="comment">;</span>

&amp;nbsp<span class="comment">; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (xdr) {</span>

&amp;nbsp<span class="comment">; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (opt.error &amp;amp;&amp;amp; typeof opt.error == &amp;quot;function&amp;quot;) {</span>

&amp;nbsp<span class="comment">; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; xdr.onerror = function () {</span>

&amp;nbsp<span class="comment">; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; opt.error(); ;</span>

&amp;nbsp<span class="comment">; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; };</span>

&amp;nbsp<span class="comment">; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }</span>

&amp;nbsp<span class="comment">; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; //handle timeout callback function</span>

&amp;nbsp<span class="comment">; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (opt.timeout &amp;amp;&amp;amp; typeof opt.timeout == &amp;quot;function&amp;quot;) {</span>

&amp;nbsp<span class="comment">; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; xdr.ontimeout = function () {</span>

&amp;nbsp<span class="comment">; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; opt.timeout();</span>

&amp;nbsp<span class="comment">; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; };</span>

&amp;nbsp<span class="comment">; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }</span>

&amp;nbsp<span class="comment">; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; //handle success callback function</span>

&amp;nbsp<span class="comment">; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (opt.success &amp;amp;&amp;amp; typeof opt.success == &amp;quot;function&amp;quot;) {</span>

&amp;nbsp<span class="comment">; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; xdr.onload = function () {</span>

&amp;nbsp<span class="comment">; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (opt.dataType) {//handle json formart data</span>

&amp;nbsp<span class="comment">; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (opt.dataType.toLowerCase() == &amp;quot;json&amp;quot;) {</span>

&amp;nbsp<span class="comment">; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; opt.callback(JSON.parse(xdr.responseText));</span>

&amp;nbsp<span class="comment">; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }</span>

&amp;nbsp<span class="comment">; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } else {</span>

&amp;nbsp<span class="comment">; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; opt.callback(xdr.responseText);</span>

&amp;nbsp<span class="comment">; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }</span>

&amp;nbsp<span class="comment">; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; };</span>

&amp;nbsp<span class="comment">; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }</span>

&amp;nbsp<span class="comment">; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; //wrap param to send</span>

&amp;nbsp<span class="comment">; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var data = &amp;quot;&amp;quot;;</span>

&amp;nbsp<span class="comment">; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (opt.type == &amp;quot;POST&amp;quot;) {</span>

&amp;nbsp<span class="comment">; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; data = opt.data;</span>

&amp;nbsp<span class="comment">; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } else {</span>

&amp;nbsp<span class="comment">; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; data = $.param(opt.data);</span>

&amp;nbsp<span class="comment">; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }</span>

&amp;nbsp<span class="comment">; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; xdr.open(opt.type, opt.url);</span>

&amp;nbsp<span class="comment">; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; xdr.send(data);</span>
</code></pre>]]></content>
    <summary type="html">
    <![CDATA[<p>ajax的跨域通常需要</p>
<pre><code>设置头部信息（需后端设置）

res.header(&amp;quot<span class="comment">;Access-Control-Allow-Origin&amp;quot;, &amp;quot;*&a]]>
    </summary>
    
      <category term="未分类" scheme="http://www.soledad.com.cn/categories/%E6%9C%AA%E5%88%86%E7%B1%BB/"/>
    
  </entry>
  
</feed>
